<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>半生瓜のblog</title>
  
  
  <link href="http://blog.zhaoyuxuan.xyz/atom.xml" rel="self"/>
  
  <link href="http://blog.zhaoyuxuan.xyz/"/>
  <updated>2022-03-24T03:08:34.760Z</updated>
  <id>http://blog.zhaoyuxuan.xyz/</id>
  
  <author>
    <name>快乐的威猛先生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【QT】QT线程</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/03/24/%E3%80%90QT%E3%80%91QT%E7%BA%BF%E7%A8%8B/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/03/24/%E3%80%90QT%E3%80%91QT%E7%BA%BF%E7%A8%8B/</id>
    <published>2022-03-24T03:07:44.000Z</published>
    <updated>2022-03-24T03:08:34.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><p>QT中的QThread提供了与平台无关的线程，一个QThread代表了一个应用程序中可用独立控制的线程，<strong>它与进程中的其他线程共享数据</strong>，但是是独立执行的，QThread从run()函数开始执行，默认run()通过exec()来开启事件循环，并在线程内运行一个Qt事件循环。</p><p>要创建一个线程，需要继承自QThread，并重新实现run()函数。</p><p><strong>示例:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MYTHREAD_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYTHREAD_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QThread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> :</span> <span class="keyword">public</span> QThread</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    MyThread(QObject* parent = <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">override</span></span>;<span class="comment">//线程启动，执行入口</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">bool</span> m_isStopped;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// MYTHREAD_H</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> gPies;</span><br><span class="line"></span><br><span class="line">Widget::Widget(QWidget *parent) :</span><br><span class="line">    QWidget(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~Widget()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::on_startBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gPies = <span class="number">0</span>;</span><br><span class="line">    m_MyThread1.start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::on_stopBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_MyThread1.stop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当多个同类型的线程执行时，有可能发生数据错误。</p><p>也就是说,</p><p><strong>多线程并发执行的时候，共享数据的准确性是不确定的。</strong></p><p>QMutex提供了一个互斥锁(mutex)，在任何时间至多有一个线程可以获得mutex,如果一个线程尝试获得mutex,而mutex此时已被锁住，则这个线程会睡眠，直到现在获得mutex的线程对mutex解锁为止。互斥锁常用于对共享数据的访问进行保护。</p><p><strong>示例:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MyThread::run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">while</span>(!m_isStopped &amp;&amp; i++ &lt; <span class="number">200</span>)&#123;</span><br><span class="line">        mutex.lock();</span><br><span class="line">       qDebug()&lt;&lt;QString(<span class="string">&quot;掉了%1个大饼&quot;</span>).arg(++gPies);</span><br><span class="line">        mutex.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;线程&quot;&gt;&lt;a href=&quot;#线程&quot; class=&quot;headerlink&quot; title=&quot;线程&quot;&gt;&lt;/a&gt;线程&lt;/h1&gt;&lt;p&gt;QT中的QThread提供了与平台无关的线程，一个QThread代表了一个应用程序中可用独立控制的线程，&lt;strong&gt;它与进程中的其他线程</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【年终总结】2021年终总结</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/03/23/%E3%80%90%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%E3%80%912021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/03/23/%E3%80%90%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%E3%80%912021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2022-03-23T14:46:23.000Z</published>
    <updated>2022-03-23T14:53:33.636Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2021年终总结"><a href="#2021年终总结" class="headerlink" title="2021年终总结"></a>2021年终总结</h2><p>迟到的年终总结。——(2022/3/23 22:44)</p><ul><li>回望2021</li></ul><p><strong>学习方面</strong>：</p><blockquote><p>2021年，对我来说重要的一点就是明确的自己的方向——C++服务器开发。</p><p>从年初到4月的C语言，紧接着数据结构，Java基础语法，C++，网络编程(一小点)，C++,数据结构，MySQL,win32,MFC，计算机网络，到现在的QT。</p><p>我对我这段时间的评价就是，可圈可点，但仍需努力，给我最直观的不足就是，假期时间的利用率不够高，也就是我在假期的学习效率要低一些，倒也不是止步不前，只是进度有些慢，勉勉强强吧。</p></blockquote><p><strong>生活方面:</strong></p><blockquote><p>春夏秋时，运动量较大，进入冬天后，因为天冷以及空气质量较低，运动量低了不少。</p></blockquote><ul><li>展望2022</li></ul><blockquote><p>2022，再学完QT之后，慢慢的我就需要往深了学了，加强一下C++内功并开始学习Linux服务器开发。</p><p>坚持</p><ol><li>leetcode每日打卡</li><li>锻炼</li><li>早睡</li></ol></blockquote><p>希望我不再遗憾过去，只把握当下。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2021年终总结&quot;&gt;&lt;a href=&quot;#2021年终总结&quot; class=&quot;headerlink&quot; title=&quot;2021年终总结&quot;&gt;&lt;/a&gt;2021年终总结&lt;/h2&gt;&lt;p&gt;迟到的年终总结。——(2022/3/23 22:44)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回望202</summary>
      
    
    
    
    <category term="年终总结" scheme="http://blog.zhaoyuxuan.xyz/categories/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="-年终总结" scheme="http://blog.zhaoyuxuan.xyz/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>【QT】TCP、UDP通信</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/03/23/%E3%80%90QT%E3%80%91TCP%E3%80%81UDP%E9%80%9A%E4%BF%A1/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/03/23/%E3%80%90QT%E3%80%91TCP%E3%80%81UDP%E9%80%9A%E4%BF%A1/</id>
    <published>2022-03-23T14:35:24.000Z</published>
    <updated>2022-03-23T14:37:09.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UDP、TCP"><a href="#UDP、TCP" class="headerlink" title="UDP、TCP"></a>UDP、TCP</h1><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><ul><li>UDP(User Datagram Protocol,用户数据报协议)</li></ul><p>UDP是一个轻量级、不可靠、面向数据报的、无连接的协议，多用与可靠性不严格，不是非常重要的传输。</p><p>QUdpSocket类继承自QAbstractSocket,用来发送和接收UDP数据报。</p><p>“Socket”即套接字，即IP地址+端口号。其中IP地址指定了网络中的一台主机，端口号则指定了该主机上的一个网络程序，使用套接字即可实现网络上的两个应用程序之间的通信。</p><p>QUdpSocket支持IPv4广播，要广播数据报，则只需要发送到一个特殊的地址，QHostAddress::Broadcast(255.255.255.255),数据报一般建议发送字节数小于512字节。端口号选择1024~65535(1024一下的常用作保留端口号，如FTP常用端口号21，Telnet常用端口号23，DNS域名服务器常用端口号53等)。</p><hr><p><strong>示例:</strong></p><p>发送端</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Widget::Widget(QWidget *parent) :</span><br><span class="line">    QWidget(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    m_sender = <span class="keyword">new</span> QUdpSocket(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~Widget()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::on_pushButton_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QByteArray dataGram = ui-&gt;lineEdit-&gt;text().toUtf8();</span><br><span class="line">    m_sender-&gt;writeDatagram(dataGram.data(),</span><br><span class="line">                                dataGram.size(),</span><br><span class="line">                                QHostAddress::Broadcast,</span><br><span class="line">                                <span class="number">6666</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收端</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Widget::Widget(QWidget *parent) :</span><br><span class="line">    QWidget(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">    m_receiver = <span class="keyword">new</span> QUdpSocket(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//绑定</span></span><br><span class="line">    m_receiver-&gt;bind(<span class="number">6666</span>,QUdpSocket::ShareAddress);</span><br><span class="line">    <span class="comment">//有数据来了，就处理。</span></span><br><span class="line">    connect(m_receiver,&amp;QUdpSocket::readyRead,<span class="keyword">this</span>,&amp;Widget::processData);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~Widget()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::processData</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">//有未处理的数据报</span></span><br><span class="line">   <span class="keyword">while</span>(m_receiver-&gt;hasPendingDatagrams())&#123;</span><br><span class="line"></span><br><span class="line">        QByteArray dataGram;</span><br><span class="line"></span><br><span class="line">        dataGram.resize(m_receiver-&gt;pendingDatagramSize());</span><br><span class="line"></span><br><span class="line">        m_receiver-&gt;readDatagram(dataGram.data(),dataGram.size());</span><br><span class="line"></span><br><span class="line">        ui-&gt;label_2-&gt;setText(dataGram);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202203231215830.png" alt="image-20220323121512761"></p><hr><h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h2><ul><li>TCP(Transmission Control Protocol,传输控制协议)</li></ul><p>多个网络协议包括HTTP和FTP都是基于TCP协议，TCP是面向数据流和连接的可靠的传输协议。</p><p>QTcpSocket继承自QAbstractSocket,与QUdpSocket传输的数据报不同的是，QTcpSocket传输的是连续的数据流，尤其适合连续的数据传输，TCP一般分为客户端和服务端，即C/S(Client/Server)模型。</p><p>QTcpSocket代表了两个独立的数据流，一个用来读取数据，一个用来写入数据，分别采用QTcpSocket::read()及QTcpSocket::write()操作，读取数据前先调用QTcpSocket::bytesAvaliable来确定已有足够的数据可用。</p><p>QTcpServer处理客户端的连接，可通过QTcpServer::listen()监听客户端发来的连接请求，每当有客户端连接时会发射newConnection()信号，QTcpSocket可用于读取客户端发来的数据报，亦可以发送数据报。</p><p><strong>示例:</strong></p><p>客户端</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> gTcpPort = <span class="number">8888</span>;</span><br><span class="line"></span><br><span class="line">Widget::Widget(QWidget *parent) :</span><br><span class="line">    QWidget(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">    m_tcpSocket = <span class="keyword">new</span> QTcpSocket(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//收到数据开始处理</span></span><br><span class="line">    connect(m_tcpSocket,&amp;QTcpSocket::readyRead,</span><br><span class="line">            <span class="keyword">this</span>,&amp;Widget::onReadMessage);</span><br><span class="line"></span><br><span class="line">    connect(m_tcpSocket,SIGNAL(SocketError),</span><br><span class="line">            <span class="keyword">this</span>,SLOT(onDisplayError(QAbstractSocket::SocketError)));</span><br><span class="line"></span><br><span class="line">    ui-&gt;hostLineEdit-&gt;setText(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line"></span><br><span class="line">    ui-&gt;portLineEdit-&gt;setText(QString::number(gTcpPort));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~Widget()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::onReadMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">    QByteArray bt;</span><br><span class="line"></span><br><span class="line">    bt.resize(m_tcpSocket-&gt;bytesAvailable());</span><br><span class="line">    m_tcpSocket-&gt;read(bt.data(),bt.size());<span class="comment">//读取到bt中</span></span><br><span class="line"></span><br><span class="line">    ui-&gt;msgLabel-&gt;setText(bt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::onDisplayError</span><span class="params">(QAbstractSocket::SocketError e)</span></span>&#123;</span><br><span class="line">    qDebug()&lt;&lt;<span class="string">&quot;SocketError:&quot;</span>&lt;&lt;e&lt;&lt;<span class="built_in">endl</span></span><br><span class="line">           &lt;&lt;m_tcpSocket-&gt;errorString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::on_connectBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_tcpSocket-&gt;<span class="built_in">abort</span>();<span class="comment">//终止</span></span><br><span class="line">    <span class="comment">//ip地址,端口</span></span><br><span class="line">    m_tcpSocket-&gt;connectToHost(ui-&gt;hostLineEdit-&gt;text(),gTcpPort);<span class="comment">//链接到主机</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::on_sendBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_tcpSocket-&gt;write(ui-&gt;sendLineEdit-&gt;text().toUtf8());</span><br><span class="line">    m_tcpSocket-&gt;flush();<span class="comment">//清空缓冲区</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务端</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Widget::Widget(QWidget *parent) :</span><br><span class="line">    QWidget(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    m_tcpServer = <span class="keyword">new</span> QTcpServer(<span class="keyword">this</span>);</span><br><span class="line">    m_tcpSocket = <span class="keyword">new</span> QTcpSocket(<span class="keyword">this</span>);<span class="comment">//保存链接进来的客户端</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听指定客户端发来的请求</span></span><br><span class="line">    <span class="keyword">if</span>(!m_tcpServer-&gt;listen(QHostAddress::Any,<span class="number">8888</span>))&#123;</span><br><span class="line">        qDebug()&lt;&lt;m_tcpServer-&gt;errorString();</span><br><span class="line">        close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有新的链接请求</span></span><br><span class="line">    connect(m_tcpServer,&amp;QTcpServer::newConnection,<span class="keyword">this</span>,&amp;Widget::onNewConnect);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给链接的客户端反馈信息</span></span><br><span class="line">    connect(m_tcpServer,&amp;QTcpServer::newConnection,<span class="keyword">this</span>,&amp;Widget::onSendMessage);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~Widget()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::onNewConnect</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    m_tcpSocket = m_tcpServer-&gt;nextPendingConnection();<span class="comment">//获取当前新来的链接</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//断开链接——销毁</span></span><br><span class="line">    connect(m_tcpSocket,&amp;QTcpSocket::disconnected,m_tcpServer,&amp;QTcpSocket::deleteLater);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//来消息后发送readyRead信号，与读取数据方法进行链接</span></span><br><span class="line">    connect(m_tcpSocket,&amp;QTcpSocket::readyRead,<span class="keyword">this</span>,&amp;Widget::onReadMessage);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::onSendMessage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString str = <span class="string">&quot;你好，client&quot;</span>;</span><br><span class="line">    m_tcpSocket-&gt;write(str.toUtf8());<span class="comment">//写入socket</span></span><br><span class="line">    ui-&gt;label-&gt;setText(<span class="string">&quot;发送数据成功!&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::onReadMessage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QByteArray bt = m_tcpSocket-&gt;readAll();</span><br><span class="line">    ui-&gt;readLabel-&gt;setText(bt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202203232151137.png" alt="image-20220323215110060"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;UDP、TCP&quot;&gt;&lt;a href=&quot;#UDP、TCP&quot; class=&quot;headerlink&quot; title=&quot;UDP、TCP&quot;&gt;&lt;/a&gt;UDP、TCP&lt;/h1&gt;&lt;h2 id=&quot;UDP&quot;&gt;&lt;a href=&quot;#UDP&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【月末总结】前言</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/03/18/%E3%80%90%E6%9C%88%E6%9C%AB%E6%80%BB%E7%BB%93%E3%80%91%E5%89%8D%E8%A8%80/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/03/18/%E3%80%90%E6%9C%88%E6%9C%AB%E6%80%BB%E7%BB%93%E3%80%91%E5%89%8D%E8%A8%80/</id>
    <published>2022-03-18T14:49:32.000Z</published>
    <updated>2022-03-18T14:52:01.822Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我决定新增月末总结和年终总结环节。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我决定新增月末总结和年终总结环节。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    
    <category term="-月末总结" scheme="http://blog.zhaoyuxuan.xyz/tags/%E6%9C%88%E6%9C%AB%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT中使用Lambda表达式</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/03/01/%E3%80%90QT%E3%80%91QT%E4%B8%AD%E4%BD%BF%E7%94%A8lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/03/01/%E3%80%90QT%E3%80%91QT%E4%B8%AD%E4%BD%BF%E7%94%A8lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2022-03-01T15:13:27.000Z</published>
    <updated>2022-03-01T15:15:05.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h1><p>Qt5中有全新的信号与槽语法，在Qt4基础上提高了信号与槽的灵活性,允许使用任意函数作为槽函数。但如果想更好地执行异步代码，来函数名都不想定义，则可以通过Lambda表达式来达到这个目的。</p><p>Lambda表达式是C++11新增加的特性。</p><p><strong>Lambda表达式的引入符</strong></p><table><thead><tr><th>引入符</th><th>说明</th></tr></thead><tbody><tr><td>[]</td><td>不捕获任何变量</td></tr><tr><td>[=]</td><td>以传值的方式捕获所有外部变量</td></tr><tr><td>[&amp;]</td><td>以传引用的方式捕获所有外部变量</td></tr><tr><td>[x,&amp;y]</td><td>x以传值的方式捕获，y以传引用的方式捕获</td></tr><tr><td>[=,&amp;x]</td><td>x以传引用的方式捕获，其余变量以传值的方式捕获</td></tr><tr><td>[&amp;,x]</td><td>x以传值的方式捕获，其余变量以传引用的方式捕获</td></tr></tbody></table><p><strong>格式:</strong></p><blockquote><p>[捕获列表] (参数列表-可以省略) (函数选项-可以省略) -&gt; (返回值类型-可以省略){函数体}</p></blockquote><p>详见—<a href="http://c.biancheng.net/view/3741.html">链接</a></p><p><strong>示例1:</strong></p><p>收到拒绝文件信号，执行的槽方法功能就是直接返回，没有进行任何的外部变量捕获。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connect(recvFile,&amp;ReceiveFile::refuseFile(),[]()&#123;</span><br><span class="line">     <span class="keyword">return</span>;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p><strong>示例2:</strong></p><p>传值方式捕获外部变量在函数体内部使用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connect(label,&amp;QClickLabel::clicked,[row,column,colorList]&#123;</span><br><span class="line">    NotifyManager::getInstance()-&gt;notifyOtherWindowChangeSkin(colorList.at(row *<span class="number">4</span> +column));</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>示例3:</strong><br>传址方式捕获</p><p>使用this的updateSearchStyle()成员函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connect(NotifyManager::getInstance(), &amp;NotifyManager::signalSkinChanged,[<span class="keyword">this</span>]() &#123;</span><br><span class="line">updateSearchStyle();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>注意事项:</strong><br>捕获列表不允许变量重复传递，如[=,a]则以传值方式捕获所有外部变量，又重复捕获a,就会报错。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Lambda表达式&quot;&gt;&lt;a href=&quot;#Lambda表达式&quot; class=&quot;headerlink&quot; title=&quot;Lambda表达式&quot;&gt;&lt;/a&gt;Lambda表达式&lt;/h1&gt;&lt;p&gt;Qt5中有全新的信号与槽语法，在Qt4基础上提高了信号与槽的灵活性,允许使用任意函数</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
    <category term="-Lamabda" scheme="http://blog.zhaoyuxuan.xyz/tags/Lamabda/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QString、QLatin1String、QStringLiteral</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/23/%E3%80%90QT%E3%80%91QString%E3%80%81QLatin1String%E3%80%81QStringLiteral/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/23/%E3%80%90QT%E3%80%91QString%E3%80%81QLatin1String%E3%80%81QStringLiteral/</id>
    <published>2022-02-23T11:51:45.000Z</published>
    <updated>2022-02-23T11:52:51.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="QString、QLatin1String、QStringLiteral"><a href="#QString、QLatin1String、QStringLiteral" class="headerlink" title="QString、QLatin1String、QStringLiteral"></a>QString、QLatin1String、QStringLiteral</h1><h2 id="QString"><a href="#QString" class="headerlink" title="QString"></a>QString</h2><p><strong>QString:</strong></p><p>QString提供了一个Unicode字符串，QString存储的是一串QChar,而QChar提供了16位的Unicode字符，后台使用隐式共享减少了内存的开销。</p><hr><p>假设QObject::setObject函数参数列表是QString类型，给它传递参数”test”,这里有一个通过构造产生的从const char*到QString的隐式转换，产生一个新的QString对象，字符串数据拷贝，并将字符串从UTF-8转为UTF-16的unicode字符。</p><p><strong>这样增大了内存的开销，减慢了运行效率。</strong></p><p>解决——重载运算符。</p><p>重载运算可以直接操作原始char*,不必为了我们的字符串常量去创建临时QString对象。</p><p>QString提供了很多的成员函数使用const char*而不是QString类型的字符串实现重载，包括拷贝构造、赋值运算、比较运算及其他的函数，如插入insert()、替换replace()、和indexOf()。</p><p>这些函数经过优化后<em><em>避免在函数调用的使用从const char</em> 数据构造一个QSting类型的对象</em>*。</p><p>如果应用程序定义了QT_NO_CAST_FROM_ASCII宏</p><p>DEFINES += QT_NO_CAST_FROM_ASCII</p><p>则程序无法使用const char* 相关的API函数。</p><hr><h2 id="QLatin1String"><a href="#QLatin1String" class="headerlink" title="QLatin1String"></a>QLatin1String</h2><p>在Qt5中，我们把char* 字符串的默认编码改成了UTF-8。但是相对纯ASCII或者latin1而言，很多算法处理UTF-8编码数据的时候会慢很多。</p><p>为避免不必要的内存开销(构造QString对象时涉及的内存分配、拷贝数据及数据转换成QString的内部编码这些开销)QLatin1String产生了，它是const char* 的一层薄薄的封装。它将字符串传递给函数时，函数通过QLatin1String的重载避免转换成QString对象，这样做的效率显著提高。一些接收QLatin1String为参数的重载函数能够直接对纯latin1数据进行处理，不必进行编码转换。</p><hr><h2 id="QStringLiteral"><a href="#QStringLiteral" class="headerlink" title="QStringLiteral"></a>QStringLiteral</h2><p>但是，函数只能接受QString类型的参数时，无论我们给一个字面字符串或QLatin1String,都会隐式构造一个临时的QString对象，构造这个对象需要在栈上申请一定的内存空间，然后把字符串拷贝过去，如果这样的调用比较多，那还是一笔不小的开销。此时，我们可以使用QStringLiteral来减小这个开销。</p><p>QStringLiteral其实是一个宏，从字符串常量创建QString对象的宏。</p><p>宏在编译时，从字符串文字生成QString数据，QString的内部数据将在编译时生成，在运行时不会发生任何转换或内存分配，使用QStringLiteral来代替C++中的双重数值传递将会在编译的时候显著的提升运行效率。</p><p>**优点:**使用QStringLiteral而不是双引号的普通C++的字符串可显著加快从编译时已知的数据创建QString示例的速度，相对来说有QLatin1String参数重载的比使用QStringLieral更高效。</p><p><strong>总结:</strong></p><ol><li>参数能使用const char*类型或QLatin1String类型的地方使用相应的参数。</li><li>参数需要QStirng参数类型的地方，若值不被修改，则使用QStirngLiteral宏。</li><li>参数需要QString类型且QStirng可能被修改，则直接使用QString或隐式转换。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;QString、QLatin1String、QStringLiteral&quot;&gt;&lt;a href=&quot;#QString、QLatin1String、QStringLiteral&quot; class=&quot;headerlink&quot; title=&quot;QString、QLatin1Strin</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT基本图形绘制</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/23/%E3%80%90QT%E3%80%91QT%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/23/%E3%80%90QT%E3%80%91QT%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6/</id>
    <published>2022-02-23T06:54:45.000Z</published>
    <updated>2022-02-23T06:55:21.656Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本图形绘制"><a href="#基本图形绘制" class="headerlink" title="基本图形绘制"></a>基本图形绘制</h1><h2 id="QPainter绘制基本图形"><a href="#QPainter绘制基本图形" class="headerlink" title="QPainter绘制基本图形"></a>QPainter绘制基本图形</h2><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202231051190.png" alt="image-20220223105154096"></p><p><strong>注意：</strong>QPainter画弧度所使用的角度值，是以1/16°为单位的，在画弧度的时候1°用16表示。</p><p><strong>例如：</strong>30°——30 x 16</p><p>兼容模式QPainer::CompositionMode</p><p>**例如:**可用于图片叠加，达到你想要的效果。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202231454757.png"></p><hr><h2 id="QPainterPath绘制简单图形"><a href="#QPainterPath绘制简单图形" class="headerlink" title="QPainterPath绘制简单图形"></a>QPainterPath绘制简单图形</h2><p>QPainterPath为QPainter类提供一个存储容器，里面包含了所要绘制的内容的集合及绘制顺序，如长方形、多边形、曲线等各种任意图形。当需要绘制此预先存储在QPainterPath对象中的内容时，只需调用QPainter类的DrawPath()即可，如addRect()加入一个方形，addEllipse加入一个椭圆形，addText()加入文本。</p><hr><h2 id="画笔笔刷风格"><a href="#画笔笔刷风格" class="headerlink" title="画笔笔刷风格"></a>画笔笔刷风格</h2><p><strong>画笔风格</strong>——Qt::PenStyle</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202231454943.png" alt="image-20220223111111389"></p><p><strong>笔帽风格</strong>——Qt::PenCapStyle</p><p>Qt::SquareCap 方形线端，不覆盖线的端点</p><p>Qt::FlatCap 方形线端，覆盖线的端点，并以线框一半向外延伸</p><p>Qt::RoundCap 圆线端</p><p><strong>连接点</strong>——Qt::PenJoinStyle</p><p>Qt::BevelJoin 两条线相汇形成方形连接</p><p>Qt::MiterJoin 两条线相汇形成尖角连接</p><p>Qt::RoundJoin两条线相汇形成圆角连接</p><p><strong>填充模式</strong>——Qt::FillRule</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202231114390.png" alt="image-20220223111453335"></p><ul><li>Qt::OddEventFill填充规则：从图形中某一点画一条水平线到图形外，若这条线与图形边线的交点为<strong>奇数</strong>则说明此点位与图形的内部；若交点为<strong>偶数</strong>则此点在图形的外部。</li><li>Qt::WindingFill填充规则：从图形中某一点画一条水平线到图形外，每个交点外边线方向可能向上、向下、方向相反的相互抵消，若结果不为0表示此点在图形内，若为0则在图形外。其中边线的方向是由QPainterPath创建时根据描述的顺序决定的，如果采用addRect()或addPolygon()等函数加入的图形默认为顺时针方向。</li></ul><p><strong>铺展效果</strong>——Qt::Gradient::Type</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202231146971.png" alt="image-20220223114627884"></p><p>QGradient::PadSpread :默认风格</p><p>QGradient::RepeatSpread:线性渐变</p><p>QGradient::ReflectSpread:圆形渐变</p><p><strong>画刷风格</strong>——Qt::BrushStyle</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202231454833.png" alt="image-20220223114823381"></p><hr><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202231454523.png" alt="image-20220223145256695"></p><p><strong>mainwidget.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MAINWIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAINWIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;paintarea.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QComboBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QSpinBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QPushButton&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QGridLayout&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWidget</span> :</span> <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    MainWidget(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">    ~MainWidget();</span><br><span class="line">    <span class="function"><span class="keyword">void</span>   <span class="title">initWidgets</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span>  <span class="title">ShowShape</span><span class="params">(<span class="keyword">int</span> value)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowPenColor</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowPenWidth</span><span class="params">(<span class="keyword">int</span> value)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowPenStyle</span><span class="params">(<span class="keyword">int</span> value)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowPenCap</span><span class="params">(<span class="keyword">int</span> value)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowPenJoin</span><span class="params">(<span class="keyword">int</span> value)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowFillRule</span><span class="params">(<span class="keyword">int</span> value)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowSpreadStyle</span><span class="params">(<span class="keyword">int</span> value)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowBrushColor</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowBrush</span><span class="params">(<span class="keyword">int</span> value)</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    PaintArea* m_paintArea; <span class="comment">//绘图区域</span></span><br><span class="line">    QLabel* m_shapeLabel ; <span class="comment">//形状</span></span><br><span class="line">    QComboBox* m_shapeCombox;</span><br><span class="line">    QLabel* m_penWidthLabel;<span class="comment">//线宽</span></span><br><span class="line">    QSpinBox *m_penWithSpinBox;</span><br><span class="line">    QLabel* m_penColorLabel;<span class="comment">//画笔颜色</span></span><br><span class="line">    QFrame* m_penColorFrame;</span><br><span class="line">    QPushButton* m_penColorBtn;<span class="comment">//确认选择画笔颜色按钮</span></span><br><span class="line">    QLabel* m_penStyleLabel;<span class="comment">//画笔风格</span></span><br><span class="line">    QComboBox* m_penStyleComboBox;</span><br><span class="line">    QLabel* m_penCapLabel;<span class="comment">//笔帽风格</span></span><br><span class="line">    QComboBox* m_penCapComboBox;</span><br><span class="line">    QLabel* m_penJoinLabel;<span class="comment">//画笔连接点</span></span><br><span class="line">    QComboBox* m_penJoinComboBox;</span><br><span class="line">    QLabel* m_fillRuleLabel;<span class="comment">//填充模式</span></span><br><span class="line">    QComboBox* m_fillRuleComboBox;</span><br><span class="line">    QLabel* m_spreadLabel;<span class="comment">//铺展效果</span></span><br><span class="line">    QComboBox* m_spreadComboBox;</span><br><span class="line">    QGradient::Spread m_spread;</span><br><span class="line">    QLabel* m_brushColorLabel;<span class="comment">//画刷颜色</span></span><br><span class="line">    QFrame* m_brushColorFrame;</span><br><span class="line">    QPushButton* m_brushColorBtn;</span><br><span class="line">    QLabel* m_brushStyleLabel;<span class="comment">//画刷风格</span></span><br><span class="line">    QComboBox* m_brushStytleComboBox;</span><br><span class="line">    QGridLayout* m_rightLayout;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// MAINWIDGET_H</span></span></span><br></pre></td></tr></table></figure><p><strong>mainwidget.cpp</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QColorDialog&gt;</span></span></span><br><span class="line">MainWidget::MainWidget(QWidget *parent)</span><br><span class="line">    : QWidget(parent)</span><br><span class="line">&#123;</span><br><span class="line">    initWidgets();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWidget::~MainWidget()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化部件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::initWidgets</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_paintArea = <span class="keyword">new</span> PaintArea;</span><br><span class="line">    m_shapeLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;形状&quot;</span>));</span><br><span class="line">    m_shapeCombox = <span class="keyword">new</span> QComboBox;</span><br><span class="line"></span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Line&quot;</span>),PaintArea::Line);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Rectangle&quot;</span>),PaintArea::Rectangle);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;RoundedRect&quot;</span>),PaintArea::Rectangle);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Ellipse&quot;</span>),PaintArea::Ellipse);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Polygon&quot;</span>),PaintArea::Polygon);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Polyline&quot;</span>),PaintArea::Polyline);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Points&quot;</span>),PaintArea::Points);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Arc&quot;</span>),PaintArea::Arc);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Path&quot;</span>),PaintArea::Path);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Text&quot;</span>),PaintArea::Text);</span><br><span class="line">    m_shapeCombox-&gt;addItem(tr(<span class="string">&quot;Pixmap&quot;</span>),PaintArea::Pixmap);</span><br><span class="line">    connect(m_shapeCombox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowShape(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    m_penColorLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;画笔颜色&quot;</span>));</span><br><span class="line">    m_penColorFrame = <span class="keyword">new</span> QFrame;</span><br><span class="line">    m_penColorFrame-&gt;setFrameStyle(QFrame::Panel | QFrame::Sunken);<span class="comment">//设置风格</span></span><br><span class="line">    m_penColorFrame-&gt;setAutoFillBackground(<span class="literal">true</span>);</span><br><span class="line">    m_penColorFrame-&gt;setPalette(QPalette(Qt::black));</span><br><span class="line">    m_penColorBtn = <span class="keyword">new</span> QPushButton(tr(<span class="string">&quot;更改&quot;</span>));</span><br><span class="line">    connect(m_penColorBtn,SIGNAL(clicked(<span class="keyword">bool</span>)),<span class="keyword">this</span>,SLOT(ShowPenColor()));</span><br><span class="line"></span><br><span class="line">    m_penWidthLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;画线宽度&quot;</span>));</span><br><span class="line">    m_penWithSpinBox = <span class="keyword">new</span> QSpinBox;</span><br><span class="line">    m_penWithSpinBox-&gt;setRange(<span class="number">1</span>,<span class="number">20</span>);</span><br><span class="line">    connect(m_penWithSpinBox,SIGNAL( valueChanged(<span class="keyword">int</span>)),SLOT(ShowPenWidth(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    m_penStyleLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;画笔风格&quot;</span>));</span><br><span class="line">    m_penStyleComboBox  = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    m_penStyleComboBox-&gt;addItem(tr(<span class="string">&quot;SolidLine&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::SolidLine ));</span><br><span class="line">    m_penStyleComboBox-&gt;addItem(tr(<span class="string">&quot;DashLine&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::DashLine));</span><br><span class="line">    m_penStyleComboBox-&gt;addItem(tr(<span class="string">&quot;DotLine&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::DotLine));</span><br><span class="line">    m_penStyleComboBox-&gt;addItem(tr(<span class="string">&quot;DashDotLine&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::DashDotLine ));</span><br><span class="line">    m_penStyleComboBox-&gt;addItem(tr(<span class="string">&quot;DashDotDotLine&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::DashDotDotLine ));</span><br><span class="line">    m_penStyleComboBox-&gt;addItem(tr(<span class="string">&quot;CustomDashLine&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::CustomDashLine));</span><br><span class="line">    connect(m_penStyleComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowPenStyle(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    m_penCapLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;画笔笔帽&quot;</span>));</span><br><span class="line">    m_penCapComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    m_penCapComboBox-&gt;addItem(tr(<span class="string">&quot;SquareCap&quot;</span>),Qt::SquareCap);</span><br><span class="line">    m_penCapComboBox-&gt;addItem(tr(<span class="string">&quot;FlatCap&quot;</span>),Qt::FlatCap);</span><br><span class="line">    m_penCapComboBox-&gt;addItem(tr(<span class="string">&quot;RoundCap&quot;</span>),Qt::RoundCap);</span><br><span class="line">    connect(m_penCapComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowPenCap(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    m_penJoinLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;画笔连接点&quot;</span>));</span><br><span class="line">    m_penJoinComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    m_penJoinComboBox-&gt;addItem(tr(<span class="string">&quot;BevelJoin&quot;</span>),Qt::BevelJoin);</span><br><span class="line">    m_penJoinComboBox-&gt;addItem(tr(<span class="string">&quot;MiterJoin&quot;</span>),Qt::MiterJoin);</span><br><span class="line">    m_penJoinComboBox-&gt;addItem(tr(<span class="string">&quot;RoundJoin&quot;</span>),Qt::RoundJoin);</span><br><span class="line">    connect(m_penJoinComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowPenJoin(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    m_fillRuleLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;填充模式&quot;</span>));</span><br><span class="line">    m_fillRuleComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    m_fillRuleComboBox-&gt;addItem(tr(<span class="string">&quot;Odd Even&quot;</span>),Qt::OddEvenFill);</span><br><span class="line">    m_fillRuleComboBox-&gt;addItem(tr(<span class="string">&quot;Winding&quot;</span>),Qt::WindingFill);</span><br><span class="line">    connect(m_fillRuleComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowFillRule(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    m_spreadLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;铺展效果&quot;</span>));</span><br><span class="line">    m_spreadComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    m_spreadComboBox-&gt;addItem(tr(<span class="string">&quot;PadStread&quot;</span>),QGradient::PadSpread);</span><br><span class="line">    m_spreadComboBox-&gt;addItem(tr(<span class="string">&quot;RepeatSpread&quot;</span>),QGradient::RepeatSpread);</span><br><span class="line">    m_spreadComboBox-&gt;addItem(tr(<span class="string">&quot;ReflectSpread&quot;</span>),QGradient::ReflectSpread);</span><br><span class="line">    connect(m_spreadComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowSpreadStyle(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    m_brushColorLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;画刷颜色&quot;</span>));</span><br><span class="line">    m_brushColorFrame = <span class="keyword">new</span> QFrame;</span><br><span class="line">    m_brushColorFrame-&gt;setFrameStyle(QFrame::Panel | QFrame::Sunken);</span><br><span class="line">    m_brushColorFrame-&gt;setAutoFillBackground(<span class="literal">true</span>);</span><br><span class="line">    m_brushColorFrame-&gt;setPalette(QPalette(Qt::green));</span><br><span class="line">    m_brushColorBtn = <span class="keyword">new</span> QPushButton(tr(<span class="string">&quot;更改&quot;</span>));</span><br><span class="line">    connect(m_brushColorBtn,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(ShowBrushColor()) );</span><br><span class="line"></span><br><span class="line">    m_brushStyleLabel = <span class="keyword">new</span> QLabel(tr(<span class="string">&quot;画刷风格&quot;</span>));</span><br><span class="line">    m_brushStytleComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;SolidPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::SolidPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;Dense1Pattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::Dense1Pattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;Dense2Pattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::Dense2Pattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;Dense3Pattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::Dense3Pattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;Dense4Pattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::Dense4Pattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;Dense5Pattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::Dense5Pattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;Dense6Pattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::Dense6Pattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;Dense7Pattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::Dense7Pattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;HorPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::HorPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;VerPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::VerPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;CrossPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::CrossPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;BDiagPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::BDiagPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;FDiagPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::FDiagPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;DiagCrossPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::DiagCrossPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;LinearGradientPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::LinearGradientPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;ConicalGradientPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::ConicalGradientPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;RadialGradientPattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::RadialGradientPattern));</span><br><span class="line">    m_brushStytleComboBox-&gt;addItem(tr(<span class="string">&quot;TexturePattern&quot;</span>),<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(Qt::TexturePattern));</span><br><span class="line">    connect(m_brushStytleComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowBrush(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加布局</span></span><br><span class="line">    m_rightLayout = <span class="keyword">new</span> QGridLayout;</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_shapeLabel,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_shapeCombox,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penColorLabel,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penColorFrame,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penColorBtn,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penWidthLabel,<span class="number">2</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penWithSpinBox,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penStyleLabel,<span class="number">3</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penStyleComboBox,<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penCapLabel,<span class="number">4</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penCapComboBox,<span class="number">4</span>,<span class="number">1</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penJoinLabel,<span class="number">5</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_penJoinComboBox,<span class="number">5</span>,<span class="number">1</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_fillRuleLabel,<span class="number">6</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_fillRuleComboBox,<span class="number">6</span>,<span class="number">1</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_spreadLabel,<span class="number">7</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_spreadComboBox,<span class="number">7</span>,<span class="number">1</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_brushColorLabel,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_brushColorFrame,<span class="number">8</span>,<span class="number">1</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_brushColorBtn,<span class="number">8</span>,<span class="number">2</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_brushStyleLabel,<span class="number">9</span>,<span class="number">0</span>);</span><br><span class="line">    m_rightLayout-&gt;addWidget(m_brushStytleComboBox,<span class="number">9</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    QHBoxLayout* mainLayout = <span class="keyword">new</span> QHBoxLayout(<span class="keyword">this</span>);</span><br><span class="line">    mainLayout-&gt;addWidget(m_paintArea);</span><br><span class="line">    mainLayout-&gt;addLayout(m_rightLayout);</span><br><span class="line">    ShowShape(m_shapeCombox-&gt;currentIndex());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//变更每项设置后，更新图像</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowShape</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PaintArea::Shape shape =PaintArea::Shape (m_shapeCombox-&gt;itemData(value).toInt());<span class="comment">//获取用户选择的形状</span></span><br><span class="line">    m_paintArea-&gt;setShape(shape);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowPenColor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QColor color = QColorDialog::getColor(Qt::black);</span><br><span class="line">    m_penColorFrame-&gt;setPalette(QPalette(color));</span><br><span class="line">    <span class="keyword">int</span> value = m_penWithSpinBox-&gt;value();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> styleIndex = m_penStyleComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenStyle style = Qt::PenStyle(m_penStyleComboBox-&gt;itemData(styleIndex).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> capIndex = m_penCapComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenCapStyle cap = Qt::PenCapStyle(m_penCapComboBox-&gt;itemData(capIndex).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> joinIndex = m_penJoinComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenJoinStyle join = Qt::PenJoinStyle(m_penJoinComboBox-&gt;itemData(joinIndex).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将当前画笔的各个参数传递-设置</span></span><br><span class="line">    m_paintArea-&gt;setPen(QPen(color,value,style,cap,join));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowPenWidth</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QColor color = m_penColorFrame-&gt;palette().color(QPalette::Window);<span class="comment">//获取颜色框中关于窗体的颜色值</span></span><br><span class="line">    m_penColorFrame-&gt;setPalette(QPalette(color));</span><br><span class="line">    <span class="keyword">int</span> penWidth =value;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> styleIndex = m_penStyleComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenStyle style = Qt::PenStyle(m_penStyleComboBox-&gt;itemData(styleIndex).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> capIndex = m_penCapComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenCapStyle cap = Qt::PenCapStyle(m_penCapComboBox-&gt;itemData(capIndex).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> joinIndex = m_penJoinComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenJoinStyle join = Qt::PenJoinStyle(m_penJoinComboBox-&gt;itemData(joinIndex).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将当前画笔的各个参数传递-设置</span></span><br><span class="line">    m_paintArea-&gt;setPen(QPen(color,penWidth,style,cap,join));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowPenStyle</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QColor color = m_penColorFrame-&gt;palette().color(QPalette::Window);<span class="comment">//获取颜色框中关于窗体的颜色值</span></span><br><span class="line">    m_penColorFrame-&gt;setPalette(QPalette(color));</span><br><span class="line">    <span class="keyword">int</span> penWidth = m_penWithSpinBox-&gt;value();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Qt::PenStyle style = Qt::PenStyle(m_penStyleComboBox-&gt;itemData(value).toInt());</span><br><span class="line">     <span class="keyword">if</span>(style == Qt::CustomDashLine)<span class="comment">//如果是自定义的</span></span><br><span class="line">     &#123;</span><br><span class="line">         QVector&lt;qreal&gt; dashes;</span><br><span class="line">         qreal space = <span class="number">4</span>;</span><br><span class="line">         dashes&lt;&lt;<span class="number">1</span>&lt;&lt;space&lt;&lt;<span class="number">2</span>&lt;&lt;space&lt;&lt;<span class="number">3</span>&lt;&lt;space&lt;&lt;<span class="number">4</span>&lt;&lt;space;</span><br><span class="line">         m_paintArea-&gt;m_pen.setDashPattern(dashes);</span><br><span class="line">         m_paintArea-&gt;update();</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">int</span> capIndex = m_penCapComboBox-&gt;currentIndex();</span><br><span class="line">         Qt::PenCapStyle cap = Qt::PenCapStyle(m_penCapComboBox-&gt;itemData(capIndex).toInt());</span><br><span class="line"></span><br><span class="line">         <span class="keyword">int</span> joinIndex = m_penJoinComboBox-&gt;currentIndex();</span><br><span class="line">         Qt::PenJoinStyle join = Qt::PenJoinStyle(m_penJoinComboBox-&gt;itemData(joinIndex).toInt());</span><br><span class="line"></span><br><span class="line">         <span class="comment">//将当前画笔的各个参数传递-设置</span></span><br><span class="line">         m_paintArea-&gt;setPen(QPen(color,penWidth,style,cap,join));</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowPenCap</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QColor color = m_penColorFrame-&gt;palette().color(QPalette::Window);<span class="comment">//获取颜色框中关于窗体的颜色值</span></span><br><span class="line">    m_penColorFrame-&gt;setPalette(QPalette(color));</span><br><span class="line">    <span class="keyword">int</span> penWidth =m_penWithSpinBox-&gt;value();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> styleIndex = m_penStyleComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenStyle style = Qt::PenStyle(m_penStyleComboBox-&gt;itemData(styleIndex).toInt());</span><br><span class="line"></span><br><span class="line">   <span class="comment">// int capIndex = m_penCapComboBox-&gt;currentIndex();</span></span><br><span class="line">    Qt::PenCapStyle cap = Qt::PenCapStyle(m_penCapComboBox-&gt;itemData(value).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> joinIndex = m_penJoinComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenJoinStyle join = Qt::PenJoinStyle(m_penJoinComboBox-&gt;itemData(joinIndex).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将当前画笔的各个参数传递-设置</span></span><br><span class="line">    m_paintArea-&gt;setPen(QPen(color,penWidth,style,cap,join));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowPenJoin</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QColor color = m_penColorFrame-&gt;palette().color(QPalette::Window);<span class="comment">//获取颜色框中关于窗体的颜色值</span></span><br><span class="line">    m_penColorFrame-&gt;setPalette(QPalette(color));</span><br><span class="line">    <span class="keyword">int</span> penWidth =m_penWithSpinBox-&gt;value();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> styleIndex = m_penStyleComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenStyle style = Qt::PenStyle(m_penStyleComboBox-&gt;itemData(styleIndex).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> capIndex = m_penCapComboBox-&gt;currentIndex();</span><br><span class="line">    Qt::PenCapStyle cap = Qt::PenCapStyle(m_penCapComboBox-&gt;itemData(capIndex).toInt());</span><br><span class="line"></span><br><span class="line">   <span class="comment">// int joinIndex = m_penJoinComboBox-&gt;currentIndex();</span></span><br><span class="line">    Qt::PenJoinStyle join = Qt::PenJoinStyle(m_penJoinComboBox-&gt;itemData(value).toInt());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将当前画笔的各个参数传递-设置</span></span><br><span class="line">    m_paintArea-&gt;setPen(QPen(color,penWidth,style,cap,join));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowFillRule</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Qt::FillRule rule = Qt::FillRule(value);</span><br><span class="line">    m_paintArea-&gt;setFillRule(rule);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowSpreadStyle</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_spread = QGradient::Spread(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowBrushColor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QColor color = QColorDialog::getColor(Qt::green);</span><br><span class="line">    m_brushColorFrame-&gt;setPalette(QPalette(color));</span><br><span class="line">    ShowBrush(m_brushStytleComboBox-&gt;currentIndex());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::ShowBrush</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QColor  color = m_brushColorFrame-&gt;palette().color(QPalette::Window);</span><br><span class="line">    <span class="keyword">int</span> brush = m_brushStytleComboBox-&gt;itemData(value).toInt();</span><br><span class="line">    Qt::BrushStyle style = Qt::BrushStyle(brush);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//线性渐变</span></span><br><span class="line">    <span class="keyword">if</span>(style == Qt::LinearGradientPattern)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//指定线性渐变的区域</span></span><br><span class="line">      <span class="function">QLinearGradient <span class="title">lineGradient</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>,<span class="number">400</span>,<span class="number">400</span>)</span></span>;</span><br><span class="line">      <span class="comment">//指定某个位置的渐变色，pos取值范围0~1</span></span><br><span class="line">      lineGradient.setColorAt(<span class="number">0.0</span>,Qt::white);</span><br><span class="line">      lineGradient.setColorAt(<span class="number">0.2</span>,color);</span><br><span class="line">      lineGradient.setColorAt(<span class="number">1.0</span>,Qt::black);</span><br><span class="line">      lineGradient.setSpread(m_spread);</span><br><span class="line"></span><br><span class="line">      m_paintArea-&gt;setBrush(lineGradient);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//环形渲染</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(style == Qt::RadialGradientPattern)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//中心坐标，半径长度,焦点坐标，如果需要对称，则中心坐标和焦点坐标保持一致</span></span><br><span class="line">        QRadialGradient radiaGrdient(<span class="number">200</span>,<span class="number">200</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">      radiaGrdient.setColorAt(<span class="number">0.0</span>,Qt::white);</span><br><span class="line">      radiaGrdient.setColorAt(<span class="number">0.2</span>,color);</span><br><span class="line">      radiaGrdient.setColorAt(<span class="number">1.0</span>,Qt::black);</span><br><span class="line"></span><br><span class="line">      m_paintArea-&gt;setBrush(radiaGrdient);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//弧度渲染</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(style == Qt::ConicalGradientPattern)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="comment">//中心坐标，角度</span></span><br><span class="line">         QConicalGradient conicaoGradient(<span class="number">200</span>,<span class="number">200</span>,<span class="number">30</span>);</span><br><span class="line">         conicaoGradient.setColorAt(<span class="number">0.0</span>,Qt::white);</span><br><span class="line">         conicaoGradient.setColorAt(<span class="number">0.2</span>,color);</span><br><span class="line">         conicaoGradient.setColorAt(<span class="number">1.0</span>,Qt::black);</span><br><span class="line"></span><br><span class="line">         m_paintArea-&gt;setBrush(conicaoGradient);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(style == Qt::TexturePattern)</span><br><span class="line">    &#123;</span><br><span class="line">        m_paintArea-&gt;setBrush(QBrush(QPixmap(<span class="string">&quot;test1.jpg&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//其他</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_paintArea-&gt;setBrush(QBrush(color,style));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>paintarea.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> PAINTAREA_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAINTAREA_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QPen&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QBrush&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PaintArea</span> :</span> <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Shape</span>&#123;</span>Line,Rectangle,RoundRect,Ellipse,Polygon,Polyline,Points,Arc,Path,Text,Pixmap&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">PaintArea</span><span class="params">(QWidget *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setShape</span><span class="params">(Shape shape)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setPen</span><span class="params">(QPen pen)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setBrush</span><span class="params">(QBrush brush)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setFillRule</span><span class="params">(Qt::FillRule rule)</span></span>;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">paintEvent</span><span class="params">(QPaintEvent *event)</span><span class="keyword">override</span></span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">     QPen m_pen;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">      Shape m_shape;</span><br><span class="line"></span><br><span class="line">      QBrush m_brush;</span><br><span class="line">      Qt::FillRule m_fillrule;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// PAINTAREA_H</span></span></span><br></pre></td></tr></table></figure><p><strong>paintarea.cpp</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;paintarea.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QPainter&gt;</span></span></span><br><span class="line"></span><br><span class="line">PaintArea::PaintArea(QWidget *parent) : QWidget(parent)</span><br><span class="line">&#123;</span><br><span class="line">    setPalette(QPalette(Qt::white));</span><br><span class="line">    setAutoFillBackground(<span class="literal">true</span>);<span class="comment">//设置背景自动填充</span></span><br><span class="line">    setFixedSize(<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PaintArea::setShape</span><span class="params">(PaintArea::Shape shape)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_shape = shape;</span><br><span class="line">    update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PaintArea::setPen</span><span class="params">(QPen pen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_pen = pen;</span><br><span class="line">    update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PaintArea::setBrush</span><span class="params">(QBrush brush)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_brush = brush;</span><br><span class="line">    update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PaintArea::setFillRule</span><span class="params">(Qt::FillRule rule)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_fillrule = rule;</span><br><span class="line">    update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PaintArea::paintEvent</span><span class="params">(QPaintEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    painter.setPen(m_pen);</span><br><span class="line">    painter.setBrush(m_brush);</span><br><span class="line">    <span class="function">QRect <span class="title">rect</span><span class="params">(<span class="number">50</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">200</span>)</span></span>;<span class="comment">//起始位置，宽高</span></span><br><span class="line">    <span class="keyword">const</span> QPoint points[<span class="number">4</span>]= &#123;</span><br><span class="line">        QPoint(<span class="number">150</span>,<span class="number">100</span>),</span><br><span class="line">        QPoint(<span class="number">300</span>,<span class="number">150</span>),</span><br><span class="line">        QPoint(<span class="number">100</span>,<span class="number">300</span>),</span><br><span class="line">        QPoint(<span class="number">100</span>,<span class="number">300</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">int</span> startAngle = <span class="number">30</span> * <span class="number">16</span>;<span class="comment">//1/16</span></span><br><span class="line">    <span class="keyword">int</span> spanAngle = <span class="number">120</span> * <span class="number">16</span>;</span><br><span class="line">    QPainterPath path;</span><br><span class="line">    path.addRect(<span class="number">150</span>,<span class="number">150</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">    path.moveTo(<span class="number">100</span>,<span class="number">200</span>);</span><br><span class="line">    path.cubicTo(<span class="number">300</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">    path.cubicTo(<span class="number">100</span>,<span class="number">300</span>,<span class="number">200</span>,<span class="number">200</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">    path.setFillRule(m_fillrule);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(m_shape)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> Line:</span><br><span class="line">        painter.drawLine(rect.topLeft(),rect.bottomRight());</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Rectangle:</span><br><span class="line">        painter.drawRect(rect);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> RoundRect:</span><br><span class="line">        painter.drawRoundRect(rect);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Ellipse:</span><br><span class="line">        painter.drawEllipse(rect);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Polygon:<span class="comment">//多边形,默认为4变形</span></span><br><span class="line">        painter.drawPolygon(points,<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Polyline:</span><br><span class="line">        painter.drawPolyline(points,<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Points:</span><br><span class="line">        painter.drawPoints(points,<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Arc:</span><br><span class="line">        painter.drawArc(rect, startAngle,spanAngle);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Path:</span><br><span class="line">        painter.drawPath(path);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Text:</span><br><span class="line">        painter.drawText(rect,Qt::AlignCenter,tr(<span class="string">&quot;Hello world!&quot;</span>));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Pixmap:</span><br><span class="line">        painter.drawPixmap(<span class="number">50</span>,<span class="number">100</span>,QPixmap(<span class="string">&quot;test1.jpg&quot;</span>));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本图形绘制&quot;&gt;&lt;a href=&quot;#基本图形绘制&quot; class=&quot;headerlink&quot; title=&quot;基本图形绘制&quot;&gt;&lt;/a&gt;基本图形绘制&lt;/h1&gt;&lt;h2 id=&quot;QPainter绘制基本图形&quot;&gt;&lt;a href=&quot;#QPainter绘制基本图形&quot; class=&quot;</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT事件处理</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/21/%E3%80%90QT%E3%80%91QT%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/21/%E3%80%90QT%E3%80%91QT%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/</id>
    <published>2022-02-21T03:13:41.000Z</published>
    <updated>2022-02-22T02:05:52.591Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h1><p>QT中，事件作为一个对象，继承自QEvent类，常见的有键盘事件QKeyEvent、鼠标事件QMouseEvent和定时器事件QTimerEvent等。QT中，任何QObject子类示例都可以接收和处理事件。实际编程中通常实现部件的paintEvent()、mousePressEvent()等事件处理函数来处理特定部件的特定事件。</p><p>每个程序的main函数最后都会调用QApplication类的exec()函数，它会使QT应用程序进入到<strong>事件循环</strong>，使应用程序在运行的时候<strong>接收各种事件</strong>。一旦有事件发生，QT便会构造一个相应的QEvent子类的对象来表示它，然后将它传递给QObject对象或子对象。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202211115912.png" alt="image-20220219223151174"></p><hr><h2 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h2><p><strong>对鼠标实现进行重写来实现你想要达到的功能</strong>。</p><p><strong>mouseevent.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MOUSEEVENT_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOUSEEVENT_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QMouseEvent&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> Ui &#123;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MouseEvent</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MouseEvent</span> :</span> <span class="keyword">public</span> QMainWindow</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">MouseEvent</span><span class="params">(QWidget *parent = <span class="number">0</span>)</span></span>;</span><br><span class="line">    ~MouseEvent();</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span>;<span class="comment">//鼠标按下</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span></span>;<span class="comment">//鼠标移动</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mouseReleaseEvent</span><span class="params">(QMouseEvent *event)</span></span>;<span class="comment">//鼠标释放</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MouseEvent *ui;</span><br><span class="line">    QLabel *m_statusLabel;</span><br><span class="line">    QLabel* m_posLabel;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// MOUSEEVENT_H</span></span></span><br></pre></td></tr></table></figure><p><strong>mouseevent.cpp</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mouseevent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_mouseevent.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">MouseEvent::MouseEvent(QWidget *parent) :</span><br><span class="line">    QMainWindow(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::MouseEvent)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">    setWindowTitle(QString(<span class="string">&quot;鼠标事件&quot;</span>));</span><br><span class="line">    m_statusLabel = <span class="keyword">new</span> QLabel(QString(<span class="string">&quot;当前位置:&quot;</span>));</span><br><span class="line">    m_statusLabel-&gt;setFixedWidth(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    m_posLabel = <span class="keyword">new</span> QLabel(QString(<span class="string">&quot;&quot;</span>));</span><br><span class="line">    m_posLabel-&gt;setFixedWidth(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    statusBar()-&gt;addPermanentWidget(m_statusLabel);<span class="comment">//状态栏添加永久部件</span></span><br><span class="line">    statusBar()-&gt;addPermanentWidget(m_posLabel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MouseEvent::~MouseEvent()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MouseEvent::mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString str = <span class="string">&quot;(&quot;</span>+QString::number(event-&gt;x())+<span class="string">&quot;,&quot;</span>+QString::number(event-&gt;y())+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(event-&gt;button() == Qt::LeftButton)</span><br><span class="line">    &#123;</span><br><span class="line">        statusBar()-&gt;showMessage(QString(<span class="string">&quot;左键:&quot;</span>) +str );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(event-&gt;button() == Qt::MidButton)</span><br><span class="line">    &#123;</span><br><span class="line">        statusBar()-&gt;showMessage(QString(<span class="string">&quot;中键:&quot;</span>)+str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(event-&gt;button() == Qt::RightButton)</span><br><span class="line">    &#123;</span><br><span class="line">        statusBar()-&gt;showMessage(QString(<span class="string">&quot;右键&quot;</span>)+str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MouseEvent::mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString strPos;</span><br><span class="line">    strPos = <span class="string">&quot;(&quot;</span> + QString::number(event-&gt;x())+<span class="string">&quot;,&quot;</span>+QString::number(event-&gt;y())+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    m_posLabel-&gt;setText(strPos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MouseEvent::mouseReleaseEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString strPos;</span><br><span class="line">    strPos = <span class="string">&quot;(&quot;</span> + QString::number(event-&gt;x())+<span class="string">&quot;,&quot;</span>+QString::number(event-&gt;y())+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    statusBar()-&gt;showMessage(QString(<span class="string">&quot;释放在:&quot;</span>)+strPos,<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202201122707.png" alt="image-20220220112246657"></p><hr><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><p><strong>通过重写键盘事件来达到你想要实现的效果</strong>。</p><p><strong>keyevent.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> KEYEVENT_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYEVENT_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QKeyEvent&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> Ui &#123;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KeyEvent</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KeyEvent</span> :</span> <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">KeyEvent</span><span class="params">(QWidget *parent = <span class="number">0</span>)</span></span>;</span><br><span class="line">    ~KeyEvent();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">drawPix</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">keyPressEvent</span><span class="params">(QKeyEvent *event)</span> <span class="keyword">override</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">paintEvent</span><span class="params">(QPaintEvent* event)</span><span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::KeyEvent *ui;</span><br><span class="line">    QPixmap *m_pix;</span><br><span class="line">    QImage m_image;</span><br><span class="line">    <span class="keyword">int</span> m_startX;      <span class="comment">//图标顶点位置</span></span><br><span class="line">    <span class="keyword">int</span> m_startY;</span><br><span class="line">    <span class="keyword">int</span> m_width;       <span class="comment">//界面的宽度，高度</span></span><br><span class="line">    <span class="keyword">int</span> m_height;</span><br><span class="line">    <span class="keyword">int</span> m_step;         <span class="comment">//步长</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// KEYEVENT_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>keyevent.cpp</strong></p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;keyevent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_keyevent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QPainter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QPen&gt;</span></span></span><br><span class="line">KeyEvent::KeyEvent(QWidget *parent) :</span><br><span class="line">    QWidget(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::KeyEvent)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">    setWindowTitle(QString(<span class="string">&quot;键盘事件&quot;</span>));</span><br><span class="line">    setAutoFillBackground(<span class="literal">true</span>);</span><br><span class="line">    setFixedSize(<span class="number">521</span>,<span class="number">256</span>);</span><br><span class="line">    m_width = size().width();</span><br><span class="line">    m_height = size().height();</span><br><span class="line">    m_pix = <span class="keyword">new</span> QPixmap(m_width,m_height);</span><br><span class="line">    m_pix-&gt;fill(Qt::white);</span><br><span class="line">    m_image.load(<span class="string">&quot;picture.jpg&quot;</span>);</span><br><span class="line">    m_startX = <span class="number">100</span>;</span><br><span class="line">    m_startY = <span class="number">100</span>;</span><br><span class="line">    m_step = <span class="number">20</span>;</span><br><span class="line">    drawPix();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">KeyEvent::~KeyEvent()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyEvent::drawPix</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_pix-&gt;fill(Qt::white);</span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    <span class="function">QPen <span class="title">pen</span><span class="params">(Qt::DotLine)</span></span>;</span><br><span class="line">    <span class="comment">//按照步长画纵向网格线</span></span><br><span class="line">    <span class="comment">//bagin与end成对出现</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = m_step;i &lt; m_width; i+=m_step)</span><br><span class="line">    &#123;</span><br><span class="line">        painter.begin(m_pix);<span class="comment">//指定m_pix为绘图设备</span></span><br><span class="line">        painter.setPen(pen);<span class="comment">//设置笔</span></span><br><span class="line">        painter.drawLine(QPoint(i,<span class="number">0</span>),QPoint(i,height()));</span><br><span class="line">        painter.end();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//按照步长画水平网格线</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = m_step;j &lt; m_height;j += m_step)</span><br><span class="line">    &#123;</span><br><span class="line">        painter.begin(m_pix);<span class="comment">//指定m_pix为绘图设备</span></span><br><span class="line">        painter.setPen(pen);<span class="comment">//设置笔</span></span><br><span class="line">        painter.drawLine(QPoint(<span class="number">0</span>,j),QPoint(m_width,j));</span><br><span class="line">        painter.end();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//画图片</span></span><br><span class="line">    painter.begin(m_pix);</span><br><span class="line">    painter.drawImage(QPoint(m_startX,m_startY),m_image);</span><br><span class="line">    painter.end();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyEvent::keyPressEvent</span><span class="params">(QKeyEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//按下ctrl，每次移动为1个像素</span></span><br><span class="line">    <span class="keyword">if</span>(event-&gt;modifiers() == Qt::ControlModifier)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">if</span>(event-&gt;key() == Qt::Key_Left)</span><br><span class="line">         &#123;</span><br><span class="line">             m_startX = (m_startX <span class="number">-1</span>)&lt;<span class="number">0</span> ? m_startX : m_startX<span class="number">-1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(event-&gt;key() == Qt::Key_Right)</span><br><span class="line">         &#123;</span><br><span class="line">             m_startX = (m_startX +<span class="number">1</span>+m_image.width()) &gt; m_width ? m_startX :m_startX+<span class="number">1</span> ;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(event-&gt;key() == Qt::Key_Up)</span><br><span class="line">         &#123;</span><br><span class="line">            m_startY = (m_startY - <span class="number">1</span>) &lt; <span class="number">0</span> ? m_startY:m_startY <span class="number">-1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(event-&gt;key() == Qt::Key_Down)</span><br><span class="line">         &#123;</span><br><span class="line">            m_startY = (m_startY +<span class="number">1</span> +m_image.height()) &gt; m_height ? m_startY:m_startY+<span class="number">1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span><span class="comment">//没有按ctrl键，每一移动为一个步长</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调整图标左上角位置到网格顶点顶点上</span></span><br><span class="line">        m_startX = m_startX - m_startX % m_step;</span><br><span class="line">        m_startY  =m_startY - m_startY % m_step;</span><br><span class="line">        <span class="keyword">if</span>(event-&gt;key() == Qt::Key_Left)</span><br><span class="line">        &#123;</span><br><span class="line">            m_startX = (m_startX -m_step)&lt;<span class="number">0</span> ? m_startX : m_startX-m_step;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(event-&gt;key() == Qt::Key_Right)</span><br><span class="line">        &#123;</span><br><span class="line">            m_startX = (m_startX +m_step+m_image.width()) &gt; m_width ? m_startX :m_startX+m_step ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(event-&gt;key() == Qt::Key_Up)</span><br><span class="line">        &#123;</span><br><span class="line">           m_startY = (m_startY - m_step) &lt; <span class="number">0</span> ? m_startY:m_startY -m_step;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(event-&gt;key() == Qt::Key_Down)</span><br><span class="line">        &#123;</span><br><span class="line">           m_startY = (m_startY +m_step +m_image.height()) &gt; m_height ? m_startY:m_startY+m_step;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    drawPix();<span class="comment">//根据调整后的图标位置重新在m_pix上绘制图像</span></span><br><span class="line">    update();<span class="comment">//触发窗口重绘</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyEvent::paintEvent</span><span class="params">(QPaintEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QPainter painter;</span><br><span class="line">    painter.begin(<span class="keyword">this</span>);</span><br><span class="line">    painter.drawPixmap(QPoint(<span class="number">0</span>,<span class="number">0</span>),*m_pix);</span><br><span class="line">    painter.end();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202201823175.png" alt="image-20220220182327142"></p><hr><h2 id="事件过滤"><a href="#事件过滤" class="headerlink" title="事件过滤"></a>事件过滤</h2><p><strong>指定某个对象对什么事件进行处理。</strong></p><p><strong>示例：</strong>鼠标按压对指定图片进行缩放</p><p><strong>dialog.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DIALOG_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIALOG_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QImage&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QHBoxLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QEvent&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QMouseEvent&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dialog</span> :</span> <span class="keyword">public</span> QDialog</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Dialog(QWidget *parent = <span class="number">0</span>,Qt::WindowFlags f = <span class="number">0</span>);</span><br><span class="line">    ~Dialog();</span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">eventFilter</span><span class="params">(QObject*watched ,QEvent *event)</span><span class="keyword">override</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QLabel *m_label1;</span><br><span class="line">    QLabel *m_label2;</span><br><span class="line">    QLabel *m_label3;</span><br><span class="line">    QLabel *m_stateLabel;</span><br><span class="line"></span><br><span class="line">    QImage m_image1;</span><br><span class="line">    QImage m_image2;</span><br><span class="line">    QImage m_image3;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// DIALOG_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>dialog.cpp</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;dialog.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QHBoxLayout&gt;</span></span></span><br><span class="line"></span><br><span class="line">Dialog::Dialog(QWidget *parent,Qt::WindowFlags f)</span><br><span class="line">    : QDialog(parent,f)</span><br><span class="line">&#123;</span><br><span class="line">    setWindowTitle(QString(<span class="string">&quot;事件过滤&quot;</span>));</span><br><span class="line"></span><br><span class="line">    m_label1 = <span class="keyword">new</span> QLabel;</span><br><span class="line">    m_label2 =<span class="keyword">new</span> QLabel;</span><br><span class="line">    m_label3 = <span class="keyword">new</span> QLabel;</span><br><span class="line">    m_stateLabel = <span class="keyword">new</span> QLabel(QString(<span class="string">&quot;鼠标按下标志&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    m_stateLabel-&gt;setAlignment(Qt::AlignHCenter);<span class="comment">//水平居中</span></span><br><span class="line"></span><br><span class="line">    m_image1.load(<span class="string">&quot;fly1.png&quot;</span>);</span><br><span class="line">    m_image2.load(<span class="string">&quot;fly2.png&quot;</span>);</span><br><span class="line">    m_image3.load(<span class="string">&quot;fly3.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    m_label1-&gt;setPixmap(QPixmap::fromImage(m_image1));</span><br><span class="line">    m_label2-&gt;setPixmap(QPixmap::fromImage(m_image2));</span><br><span class="line">    m_label3-&gt;setPixmap(QPixmap::fromImage(m_image3));</span><br><span class="line">    <span class="comment">//添加水平布局</span></span><br><span class="line">    QHBoxLayout *layout = <span class="keyword">new</span> QHBoxLayout;</span><br><span class="line">    layout-&gt;addWidget(m_label1);</span><br><span class="line">    layout-&gt;addWidget(m_label2);</span><br><span class="line">    layout-&gt;addWidget(m_label3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    QVBoxLayout*mainLayout = <span class="keyword">new</span> QVBoxLayout(<span class="keyword">this</span>);</span><br><span class="line">    mainLayout-&gt;addLayout(layout);</span><br><span class="line">    mainLayout-&gt;addWidget(m_stateLabel);</span><br><span class="line"></span><br><span class="line">    resize(m_image2.width() * <span class="number">3</span>,m_image2.height() *<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给图片标签部件安装事件过滤，并且指定整个窗体为监视事件的对象。</span></span><br><span class="line">    m_label1-&gt;installEventFilter(<span class="keyword">this</span>);</span><br><span class="line">    m_label2-&gt;installEventFilter(<span class="keyword">this</span>);</span><br><span class="line">    m_label3-&gt;installEventFilter(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dialog::~Dialog()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对象-事件</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Dialog::eventFilter</span><span class="params">(QObject *watched, QEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QMatrix matrix;<span class="comment">//放大比例</span></span><br><span class="line">    QImage tmpImg;<span class="comment">//保存处理过后的图片</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//放大图片</span></span><br><span class="line">    matrix.scale(<span class="number">2.0</span>,<span class="number">2.0</span>);</span><br><span class="line">    <span class="comment">//对象</span></span><br><span class="line">    <span class="keyword">if</span>(watched == m_label1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//鼠标按下事件的处理</span></span><br><span class="line">        <span class="keyword">if</span>(event-&gt;type() == QEvent::MouseButtonPress)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//转换事件类型Wie鼠标事件</span></span><br><span class="line">            QMouseEvent* mouseEvent = (QMouseEvent*)event;</span><br><span class="line">            <span class="keyword">if</span>(mouseEvent-&gt;button() &amp; Qt::LeftButton)</span><br><span class="line">            &#123;</span><br><span class="line">                m_stateLabel-&gt;setText(QString(<span class="string">&quot;左键按下图片1&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mouseEvent-&gt;button() &amp; Qt::MidButton)</span><br><span class="line">            &#123;</span><br><span class="line">                m_stateLabel-&gt;setText(QString(<span class="string">&quot;中键按下图片1&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mouseEvent-&gt;button() &amp; Qt::RightButton)</span><br><span class="line">            &#123;</span><br><span class="line">                m_stateLabel-&gt;setText(QString(<span class="string">&quot;右键按下图片1&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将原本图片缩放用tmpImg临时存储，设置图片</span></span><br><span class="line">            tmpImg = m_image1.transformed(matrix);</span><br><span class="line">            m_label1-&gt;setPixmap(QPixmap::fromImage(tmpImg));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//鼠标释放，恢复图片大小</span></span><br><span class="line">        <span class="keyword">if</span>(event-&gt;type() == QEvent::MouseButtonRelease)</span><br><span class="line">        &#123;</span><br><span class="line">            m_stateLabel-&gt;setText(QString(<span class="string">&quot;鼠标释放图片1&quot;</span>));</span><br><span class="line">            m_label1-&gt;setPixmap(QPixmap::fromImage(m_image1));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(watched ==m_label2)</span><br><span class="line">  &#123;</span><br><span class="line">        <span class="keyword">if</span>(event-&gt;type() == QEvent::MouseButtonPress)</span><br><span class="line">        &#123;</span><br><span class="line">            QMouseEvent* mouseEvent = (QMouseEvent*)event;</span><br><span class="line">            <span class="keyword">if</span>(mouseEvent-&gt;button() &amp; Qt::LeftButton)</span><br><span class="line">            &#123;</span><br><span class="line">                m_stateLabel-&gt;setText(QString(<span class="string">&quot;左键按下图片2&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mouseEvent-&gt;button() &amp; Qt::MidButton)</span><br><span class="line">            &#123;</span><br><span class="line">                m_stateLabel-&gt;setText(QString(<span class="string">&quot;中键按下图片2&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mouseEvent-&gt;button() &amp; Qt::RightButton)</span><br><span class="line">            &#123;</span><br><span class="line">                m_stateLabel-&gt;setText(QString(<span class="string">&quot;右键按下图片2&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            tmpImg = m_image2.transformed(matrix);</span><br><span class="line">            m_label2-&gt;setPixmap(QPixmap::fromImage(tmpImg));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(event-&gt;type() == QEvent::MouseButtonRelease)</span><br><span class="line">        &#123;</span><br><span class="line">            m_stateLabel-&gt;setText(QString(<span class="string">&quot;鼠标释放图片2&quot;</span>));</span><br><span class="line">            m_label2-&gt;setPixmap(QPixmap::fromImage(m_image2));</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(watched ==m_label3)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">if</span>(event-&gt;type() == QEvent::MouseButtonPress)</span><br><span class="line">      &#123;</span><br><span class="line">          QMouseEvent* mouseEvent = (QMouseEvent*)event;</span><br><span class="line">          <span class="keyword">if</span>(mouseEvent-&gt;button() &amp; Qt::LeftButton)</span><br><span class="line">          &#123;</span><br><span class="line">              m_stateLabel-&gt;setText(QString(<span class="string">&quot;左键按下图片3&quot;</span>));</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(mouseEvent-&gt;button() &amp; Qt::MidButton)</span><br><span class="line">          &#123;</span><br><span class="line">              m_stateLabel-&gt;setText(QString(<span class="string">&quot;中键按下图片3&quot;</span>));</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(mouseEvent-&gt;button() &amp; Qt::RightButton)</span><br><span class="line">          &#123;</span><br><span class="line">              m_stateLabel-&gt;setText(QString(<span class="string">&quot;右键按下图片3&quot;</span>));</span><br><span class="line">          &#125;</span><br><span class="line">          tmpImg = m_image3.transformed(matrix);</span><br><span class="line">          m_label3-&gt;setPixmap(QPixmap::fromImage(tmpImg));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(event-&gt;type() == QEvent::MouseButtonRelease)</span><br><span class="line">      &#123;</span><br><span class="line">          m_stateLabel-&gt;setText(QString(<span class="string">&quot;鼠标释放图片3&quot;</span>));</span><br><span class="line">          m_label3-&gt;setPixmap(QPixmap::fromImage(m_image3));</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//事件交给上层对话框进行处理</span></span><br><span class="line">    <span class="keyword">return</span> QDialog::eventFilter(watched,event);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202202354112.gif"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;事件处理&quot;&gt;&lt;a href=&quot;#事件处理&quot; class=&quot;headerlink&quot; title=&quot;事件处理&quot;&gt;&lt;/a&gt;事件处理&lt;/h1&gt;&lt;p&gt;QT中，事件作为一个对象，继承自QEvent类，常见的有键盘事件QKeyEvent、鼠标事件QMouseEvent和定时器事</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT调色板类</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/19/%E3%80%90QT%E3%80%91QT%E8%B0%83%E8%89%B2%E6%9D%BF%E7%B1%BB/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/19/%E3%80%90QT%E3%80%91QT%E8%B0%83%E8%89%B2%E6%9D%BF%E7%B1%BB/</id>
    <published>2022-02-19T13:07:41.000Z</published>
    <updated>2022-02-19T13:08:17.779Z</updated>
    
    <content type="html"><![CDATA[<h1 id="QPalette调色板类"><a href="#QPalette调色板类" class="headerlink" title="QPalette调色板类"></a>QPalette调色板类</h1><p>QT提供的调色板类QPalette专门用于管理部件外观显示，相当于部件或对话框的调色板，管理他们所有的颜色信息。每个部件都包含一个QPalette对象，在显示时，按照它的QPalette对象中对各部分各状态下的颜色的描述进行绘制。</p><p><strong>dialog.cpp</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;dialog.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Dialog::Dialog(QWidget *parent)</span><br><span class="line">    : QDialog(parent)</span><br><span class="line">&#123;</span><br><span class="line">    createCtrlFrame();</span><br><span class="line">    createContentFrame();</span><br><span class="line">    QHBoxLayout *mainLayout = <span class="keyword">new</span> QHBoxLayout(<span class="keyword">this</span>);</span><br><span class="line">    mainLayout-&gt;addWidget(m_ctrlFrame);</span><br><span class="line">    mainLayout-&gt;addWidget(m_contentFrame);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dialog::~Dialog()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialog::createCtrlFrame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_ctrlFrame = <span class="keyword">new</span> QFrame;</span><br><span class="line">    m_ctrlFrame-&gt;setFrameStyle(QFrame::Sunken | QFrame::Box);</span><br><span class="line">    m_windowLabel = <span class="keyword">new</span> QLabel(<span class="string">&quot;QPalette::Window:&quot;</span>);</span><br><span class="line">    m_windowComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    fillColorList(m_windowComboBox);</span><br><span class="line">    connect(m_windowComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowWindow(<span class="keyword">int</span>)));<span class="comment">//根据选择颜色给窗体设置颜色</span></span><br><span class="line">    m_windowTextLabel = <span class="keyword">new</span> QLabel(<span class="string">&quot;QPalette::WindowText&quot;</span>);</span><br><span class="line">    m_windowTextComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">     fillColorList(m_windowTextComboBox);</span><br><span class="line">     <span class="comment">//选中时发送信号</span></span><br><span class="line">     connect(m_windowTextComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowWindowText(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    m_buttonLabel = <span class="keyword">new</span> QLabel(<span class="string">&quot;QPalette::Button&quot;</span>);</span><br><span class="line">    m_buttonCombox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    fillColorList(m_buttonCombox);</span><br><span class="line">    connect(m_buttonCombox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowButton(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">    m_buttonTextLabel = <span class="keyword">new</span> QLabel(<span class="string">&quot;QPalette::ButtonText&quot;</span>);</span><br><span class="line">    m_buttonTextComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    fillColorList(m_buttonTextComboBox);</span><br><span class="line">   connect(m_buttonTextComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowButtonText(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">   m_baseLabel = <span class="keyword">new</span> QLabel(<span class="string">&quot;QPalette::Base&quot;</span>);</span><br><span class="line">   m_baseComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">   fillColorList(m_baseComboBox);</span><br><span class="line">   connect(m_baseComboBox,SIGNAL(activated(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(ShowBase(<span class="keyword">int</span>)));</span><br><span class="line"></span><br><span class="line">   <span class="comment">//布局</span></span><br><span class="line">   QGridLayout *mainLayout = <span class="keyword">new</span> QGridLayout(m_ctrlFrame);</span><br><span class="line">   mainLayout-&gt;setSpacing(<span class="number">20</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_windowLabel,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_windowComboBox,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_windowTextLabel,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_windowTextComboBox,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_buttonLabel,<span class="number">2</span>,<span class="number">0</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_buttonCombox,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_buttonTextLabel,<span class="number">3</span>,<span class="number">0</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_buttonTextComboBox,<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_baseLabel,<span class="number">4</span>,<span class="number">0</span>);</span><br><span class="line">   mainLayout-&gt;addWidget(m_baseComboBox,<span class="number">4</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialog::createContentFrame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_contentFrame = <span class="keyword">new</span> QFrame;</span><br><span class="line">    m_contentFrame-&gt;setAutoFillBackground(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    m_label1 = <span class="keyword">new</span> QLabel(<span class="string">&quot;请输入一个值&quot;</span>);</span><br><span class="line">    m_label2 = <span class="keyword">new</span> QLabel(<span class="string">&quot;请输入字符串&quot;</span>);</span><br><span class="line">    m_comboBox1 = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    m_lineEdit = <span class="keyword">new</span> QLineEdit;</span><br><span class="line">    m_textEdit = <span class="keyword">new</span> QTextEdit;</span><br><span class="line"></span><br><span class="line">    m_okBtn = <span class="keyword">new</span> QPushButton(QString(<span class="string">&quot;确认&quot;</span>));</span><br><span class="line">    m_cancelBtn = <span class="keyword">new</span> QPushButton(QString(<span class="string">&quot;取消&quot;</span>));</span><br><span class="line">    m_okBtn-&gt;setAutoFillBackground(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    QGridLayout  *topLayout = <span class="keyword">new</span> QGridLayout;</span><br><span class="line">    topLayout-&gt;addWidget(m_label1,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    topLayout-&gt;addWidget(m_comboBox1,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    topLayout-&gt;addWidget(m_label2,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    topLayout-&gt;addWidget(m_lineEdit,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    topLayout-&gt;addWidget(m_textEdit,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    QHBoxLayout *bottomLayout = <span class="keyword">new</span> QHBoxLayout;</span><br><span class="line">    bottomLayout-&gt;addWidget(m_okBtn);</span><br><span class="line">    bottomLayout-&gt;addWidget(m_cancelBtn);</span><br><span class="line"></span><br><span class="line">    QVBoxLayout *mainLayout = <span class="keyword">new</span> QVBoxLayout(m_contentFrame);</span><br><span class="line">    mainLayout-&gt;addLayout(topLayout);</span><br><span class="line">    mainLayout-&gt;addLayout(bottomLayout);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialog::fillColorList</span><span class="params">(QComboBox *comboBox)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QStringList colorList = QColor::colorNames();<span class="comment">//获取所有颜色</span></span><br><span class="line">    QString color;</span><br><span class="line">    foreach (color, colorList)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">QPixmap <span class="title">pix</span><span class="params">(QSize(<span class="number">70</span>,<span class="number">20</span>))</span></span>;<span class="comment">//下拉框尺寸</span></span><br><span class="line">        pix.fill(QColor(color));</span><br><span class="line">        comboBox-&gt;addItem(QIcon(pix),<span class="literal">NULL</span>);<span class="comment">//下拉菜单添加选项</span></span><br><span class="line">        comboBox-&gt;setIconSize(QSize(<span class="number">70</span>,<span class="number">20</span>));</span><br><span class="line">        comboBox-&gt;setSizeAdjustPolicy(QComboBox::AdjustToContents);<span class="comment">//根据内容适应尺寸</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialog::ShowWindow</span><span class="params">(<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QStringList colorList = QColor::colorNames();</span><br><span class="line">    QColor color = QColor(colorList[index]);<span class="comment">//获取用户选择的颜色</span></span><br><span class="line">    QPalette p = m_contentFrame-&gt;palette();<span class="comment">//获取调色板</span></span><br><span class="line">    p.setColor(QPalette::Window,color);</span><br><span class="line">    m_contentFrame-&gt;setPalette(p);<span class="comment">//设置调色板</span></span><br><span class="line">    m_contentFrame-&gt;update();<span class="comment">//刷新</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialog::ShowWindowText</span><span class="params">(<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//找到颜色，获取调色板，设置调色板对指定位置颜色进行修改，刷新。</span></span><br><span class="line">    QStringList colorList = QColor::colorNames();</span><br><span class="line">    QColor color = QColor(colorList[index]);</span><br><span class="line">    QPalette p = m_contentFrame-&gt;palette();</span><br><span class="line">    p.setColor(QPalette::WindowText,color);</span><br><span class="line">    m_contentFrame-&gt;setPalette(p);</span><br><span class="line">    m_contentFrame-&gt;update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialog::ShowButton</span><span class="params">(<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QStringList colorList = QColor::colorNames();</span><br><span class="line">    QColor color = QColor(colorList[index]);</span><br><span class="line">    QPalette p = m_contentFrame-&gt;palette();</span><br><span class="line">    p.setColor(QPalette::Button,color);</span><br><span class="line">    m_contentFrame-&gt;setPalette(p);</span><br><span class="line">    m_contentFrame-&gt;update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialog::ShowButtonText</span><span class="params">(<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QStringList colorList = QColor::colorNames();</span><br><span class="line">    QColor color = QColor(colorList[index]);</span><br><span class="line">    QPalette p = m_contentFrame-&gt;palette();</span><br><span class="line">    p.setColor(QPalette::ButtonText,color);</span><br><span class="line">    m_contentFrame-&gt;setPalette(p);</span><br><span class="line">    m_contentFrame-&gt;update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialog::ShowBase</span><span class="params">(<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QStringList colorList = QColor::colorNames();</span><br><span class="line">    QColor color = QColor(colorList[index]);</span><br><span class="line">    QPalette p = m_contentFrame-&gt;palette();</span><br><span class="line">    p.setColor(QPalette::Base,color);</span><br><span class="line">    m_contentFrame-&gt;setPalette(p);</span><br><span class="line">    m_contentFrame-&gt;update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>dialog.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DIALOG_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIALOG_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QFrame&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QComboBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QTextEdit&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QGridLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QLineEdit&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dialog</span> :</span> <span class="keyword">public</span> QDialog</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Dialog(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">    ~Dialog();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">createCtrlFrame</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">createContentFrame</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">fillColorList</span><span class="params">(QComboBox* comboBox)</span></span>;<span class="comment">//给组合框添加颜色列表</span></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowWindow</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowWindowText</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowButton</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowButtonText</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowBase</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QFrame *m_ctrlFrame;</span><br><span class="line">    QLabel *m_windowLabel;</span><br><span class="line">    QComboBox*m_windowComboBox;</span><br><span class="line">    QLabel *m_windowTextLabel;</span><br><span class="line">    QComboBox *m_windowTextComboBox;</span><br><span class="line">    QLabel *m_buttonLabel;</span><br><span class="line">    QComboBox * m_buttonCombox;</span><br><span class="line">    QLabel* m_buttonTextLabel;</span><br><span class="line">    QComboBox* m_buttonTextComboBox;</span><br><span class="line">    QLabel* m_baseLabel;</span><br><span class="line">    QComboBox *m_baseComboBox;</span><br><span class="line">    QFrame* m_contentFrame;</span><br><span class="line">    QLabel* m_label1;</span><br><span class="line">    QLabel* m_label2;</span><br><span class="line">    QComboBox* m_comboBox1;</span><br><span class="line">    QLineEdit* m_lineEdit;</span><br><span class="line">    QTextEdit* m_textEdit;</span><br><span class="line">    QPushButton* m_okBtn;</span><br><span class="line">    QPushButton* m_cancelBtn;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// DIALOG_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>上述代码中调色板是如何知道指定位置代表的是什么内容？</strong></p><p>WindowText,Button……等已经在QT内声明好了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">ColorRole</span> &#123;</span> WindowText, Button, Light, Midlight, Dark, Mid,</span><br><span class="line">                     Text, BrightText, ButtonText, Base,Window, Shadow,</span><br><span class="line">                     Highlight, HighlightedText,</span><br><span class="line">                     Link, LinkVisited,</span><br><span class="line">                     AlternateBase,</span><br><span class="line">                     NoRole,</span><br><span class="line">                     ToolTipBase, ToolTipText,</span><br><span class="line">                     NColorRoles = ToolTipText + <span class="number">1</span>,</span><br><span class="line">                     Foreground = WindowText, Background = Window</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>相比较起来样式表功能更加强大</strong>，如果要实现的颜色效果不是很复杂，可以使用调色板。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;QPalette调色板类&quot;&gt;&lt;a href=&quot;#QPalette调色板类&quot; class=&quot;headerlink&quot; title=&quot;QPalette调色板类&quot;&gt;&lt;/a&gt;QPalette调色板类&lt;/h1&gt;&lt;p&gt;QT提供的调色板类QPalette专门用于管理部件外观显示，</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT不规则窗体效果——-遮罩</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/19/%E3%80%90QT%E3%80%91QT%E4%B8%8D%E8%A7%84%E5%88%99%E7%AA%97%E4%BD%93%E6%95%88%E6%9E%9C%E2%80%94%E2%80%94%E9%81%AE%E7%BD%A9/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/19/%E3%80%90QT%E3%80%91QT%E4%B8%8D%E8%A7%84%E5%88%99%E7%AA%97%E4%BD%93%E6%95%88%E6%9E%9C%E2%80%94%E2%80%94%E9%81%AE%E7%BD%A9/</id>
    <published>2022-02-19T03:41:11.000Z</published>
    <updated>2022-02-19T03:43:52.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不规则窗体效果——遮罩"><a href="#不规则窗体效果——遮罩" class="headerlink" title="不规则窗体效果——遮罩"></a>不规则窗体效果——遮罩</h1><p>根据一张图片来设置窗体显示效果。<strong>setMask</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QPixmap&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QBitmap&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QPainter&gt;</span></span></span><br><span class="line">Widget::Widget(QWidget *parent) :</span><br><span class="line">    QWidget(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">    QPixmap pixmap;</span><br><span class="line">    pixmap.load(<span class="string">&quot;:/flower.png&quot;</span>);</span><br><span class="line">    ui-&gt;label-&gt;resize(pixmap.size());</span><br><span class="line">    <span class="keyword">this</span>-&gt;resize(pixmap.size());<span class="comment">//设置窗体大小</span></span><br><span class="line">    <span class="comment">//设置遮罩</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;setMask(pixmap.mask());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~Widget()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::paintEvent</span><span class="params">(QPaintEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    painter.drawPixmap(<span class="number">0</span>,<span class="number">0</span>,QPixmap(<span class="string">&quot;:/flower.png&quot;</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;不规则窗体效果——遮罩&quot;&gt;&lt;a href=&quot;#不规则窗体效果——遮罩&quot; class=&quot;headerlink&quot; title=&quot;不规则窗体效果——遮罩&quot;&gt;&lt;/a&gt;不规则窗体效果——遮罩&lt;/h1&gt;&lt;p&gt;根据一张图片来设置窗体显示效果。&lt;strong&gt;setMask&lt;/s</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT透明及阴影</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/18/%E3%80%90QT%E3%80%91QT%E9%80%8F%E6%98%8E%E5%8F%8A%E9%98%B4%E5%BD%B1/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/18/%E3%80%90QT%E3%80%91QT%E9%80%8F%E6%98%8E%E5%8F%8A%E9%98%B4%E5%BD%B1/</id>
    <published>2022-02-18T14:55:24.000Z</published>
    <updated>2022-02-18T14:56:12.433Z</updated>
    
    <content type="html"><![CDATA[<h1 id="QT部件透明及阴影效果"><a href="#QT部件透明及阴影效果" class="headerlink" title="QT部件透明及阴影效果"></a>QT部件透明及阴影效果</h1><p><strong>透明</strong>：</p><p>全部透明。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">窗口透明属性,取值<span class="number">0</span>~<span class="number">1</span>,<span class="number">0</span>表示完全透明，<span class="number">1</span>表示完全不透明</span><br><span class="line">setWindowOpacity(<span class="number">0.5</span>);</span><br></pre></td></tr></table></figure><p>部件不透明，窗体背景完全透明。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setWindowFlags(Qt::FramelessWindowHint);<span class="comment">//设置无边框</span></span><br><span class="line">setAttribute(Qt::WA_TranslucentBackground);<span class="comment">//设置背景透明</span></span><br></pre></td></tr></table></figure><p> 部件设置透明。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QGraphicsOpacityEffect *opacityEffect = <span class="keyword">new</span> QGraphicsOpacityEffect ;</span><br><span class="line">opacityEffect-&gt;setOpacity(<span class="number">0.1</span>);</span><br><span class="line">ui-&gt;label-&gt;setGraphicsEffect(opacityEffect);</span><br></pre></td></tr></table></figure><p><strong>阴影</strong>:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//阴影效果</span></span><br><span class="line">QGraphicsDropShadowEffect *shadowEffect = <span class="keyword">new</span> QGraphicsDropShadowEffect;</span><br><span class="line"> <span class="comment">//阴影色，透明度</span></span><br><span class="line">shadowEffect-&gt;setColor(QColor(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">shadowEffect-&gt;setBlurRadius(<span class="number">20</span>);<span class="comment">//阴影模糊半径</span></span><br><span class="line">shadowEffect-&gt;setOffset(<span class="number">20</span>);<span class="comment">//阴影的偏移值</span></span><br><span class="line">ui-&gt;label-&gt;setGraphicsEffect(shadowEffect);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;QT部件透明及阴影效果&quot;&gt;&lt;a href=&quot;#QT部件透明及阴影效果&quot; class=&quot;headerlink&quot; title=&quot;QT部件透明及阴影效果&quot;&gt;&lt;/a&gt;QT部件透明及阴影效果&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;透明&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;全部透明。&lt;</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT样式表语法</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/18/%E3%80%90QT%E3%80%91QT%E6%A0%B7%E5%BC%8F%E8%A1%A8%E8%AF%AD%E6%B3%95/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/18/%E3%80%90QT%E3%80%91QT%E6%A0%B7%E5%BC%8F%E8%A1%A8%E8%AF%AD%E6%B3%95/</id>
    <published>2022-02-18T12:41:22.000Z</published>
    <updated>2022-02-18T14:55:54.348Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Qt样式表"><a href="#Qt样式表" class="headerlink" title="Qt样式表"></a>Qt样式表</h1><h2 id="Qt样式表介绍"><a href="#Qt样式表介绍" class="headerlink" title="Qt样式表介绍"></a>Qt样式表介绍</h2><p>Qt样式表是一个可以自定义部件外观的强大机制，样式表的概念、术语、语法均受到HTML层叠样式表(CSS)的启发。</p><p>样式表可通过QApplication::setStyleSheet()函数将其设置到<strong>整个</strong>应用程序上，也可以使用QWidget::setStyleSheet()将其设置到<strong>指定</strong>的部件或子部件上，不同级别均可设置样式表，称为样式表的层叠。</p><p>样式表也可通过设计模式编辑样式表。</p><h2 id="Qt样式表语法及使用"><a href="#Qt样式表语法及使用" class="headerlink" title="Qt样式表语法及使用"></a>Qt样式表语法及使用</h2><h3 id="样式规则"><a href="#样式规则" class="headerlink" title="样式规则"></a>样式规则</h3><p>每个样式规则由选择器和声明组成。</p><p>选择器：指定受该规则影响的<strong>部件</strong>。</p><p>声明：指定则个部件上要设置的<strong>属性</strong>。</p><p><strong>例如</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">QPushButton&#123;color:red&#125; </span><br><span class="line"></span><br><span class="line">QPushButton是选择器；</span><br><span class="line">&#123;color:red&#125;是声明；</span><br><span class="line">color是属性；</span><br><span class="line">red是值。</span><br><span class="line"></span><br><span class="line">选择器&#123;属性1：值1；属性2：值2；属性3：值3&#125;</span><br></pre></td></tr></table></figure><p>此规定指定了QPushButton和它子类使用红色作为前景色。</p><p><strong>样式表中一般不区分大小写</strong>，如color与COLOR表相同属性，<strong>但类名、对象名以及Qt属性名区分大小写</strong>。</p><p>声明中的多组”属性 ： 值”列表以分号；隔开。</p><p><strong>例如</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QPushButton&#123;color:red;background-color:white&#125;</span><br></pre></td></tr></table></figure><h3 id="选择器类型"><a href="#选择器类型" class="headerlink" title="选择器类型"></a>选择器类型</h3><p>选择器就是要被设置样式的对象(部件)。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202181040080.png" alt="image-20220218104003019"></p><h3 id="子部件"><a href="#子部件" class="headerlink" title="子部件"></a>子部件</h3><p>对于一些复杂的部件修改样式，可能需要访问它们的子部件，如QComboBox的下拉按钮，QSpinBox的向上、向下箭头等。</p><p><strong>例如：</strong></p><p>下来按钮设置图片属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QComboBox::drop-down&#123;image:url(dropdown.png)&#125;</span><br></pre></td></tr></table></figure><h3 id="伪状态"><a href="#伪状态" class="headerlink" title="伪状态"></a>伪状态</h3><p>1.选择器可以包含伪状态来限制规则在部件的指定状态上的应用。伪状态在选择器之后，用冒号隔离。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">鼠标悬停在按钮上时被应用：</span><br><span class="line">QPushButton:hover&#123;color:white&#125;</span><br><span class="line"></span><br><span class="line">鼠标不悬停在按钮上时被应用(!表否定)</span><br><span class="line">QPushButton.!hover&#123;color:white&#125;</span><br></pre></td></tr></table></figure><p>2.伪状态可以多个连用，达到逻辑与效果。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">鼠标悬停在有一个被选中的QCheckBox部件上时才应用规则：</span><br><span class="line">QCheckBox:hover:checked&#123;color:white&#125;</span><br></pre></td></tr></table></figure><p>3.伪状态可通过逗号达到逻辑或效果。如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">鼠标悬停或勾选时，应用后面的样式</span><br><span class="line">QCheckBox:hover,checked&#123;color:white&#125;</span><br></pre></td></tr></table></figure><p>4.伪状态与子部件联合使用。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QComboBox::drop-down:hover&#123;image:url(dropdown_bright.png)</span><br></pre></td></tr></table></figure><h3 id="冲突解决"><a href="#冲突解决" class="headerlink" title="冲突解决"></a>冲突解决</h3><p>几个样式规则对相同的属性指定不同的值时会产生冲突。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QPushButton#okButton&#123;color:gray&#125;</span><br><span class="line">QPushButton&#123;color:red&#125;</span><br></pre></td></tr></table></figure><p><strong>冲突原则</strong>：特殊的选择器优先。此例中QPushButton#okButton代表的是单一对象，而不是一个类的所有实例，所以okButton的文本颜色会是灰色的。同样的有伪状态的比没有伪状态的优先。</p><p>1.<strong>层叠</strong></p><p>样式表设置在QApplication上、父部件上或子部件上。部件有效的样式表是通过部件的祖先样式表和QApplication上的样式表合并得到的，当发生冲突时，部件自己的样式表优先于任何继承的样式表。</p><p>2.<strong>继承</strong></p><p>当使用Qt样式时，部件并不会自动从父部件继承字体和颜色样式设置 。如一个QPushButton包含在一个QGroupBox中，这里 对QGroupBox设置样式表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qApp-&gt;setStyleSheet(&quot;QGroupBox&#123;color:red;&#125;&quot;);</span><br></pre></td></tr></table></figure><p>但是没有对QPushButton设置样式表，这时QPushButton会使用系统颜色，而不会继承QGroupBox的颜色， 如果想要QGroupBox的颜色设置到其子部件上，可以这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qApp-&gt;setStyleSheet(&quot;QGroupBox,QGroupBox*&#123;color:red;&#125;&quot;)</span><br></pre></td></tr></table></figure><p>3.<strong>设置QObject属性</strong></p><p>从Qt4.3开始，任何可设计的Q_PROPERTY都可以使用”qproperty-属性 名称”的语法来设置样式表。如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MyLabel&#123;qproperty-pixmap:url(pixmap.png);&#125;</span><br><span class="line">MyGroupBox&#123;qproperty-titleColor:rgb(100,200,100);&#125;</span><br><span class="line">QPushButton&#123;qproperty-iconSize:20px 20px;&#125;</span><br></pre></td></tr></table></figure><h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><p> 使用样式表时，每个部件被看作拥有4个同心矩形的盒子，四个矩形的内容分别为内容(content)、填衬(padding)、边框(border)、边距(margin。</p><p>边距、边框宽度和填衬等属性的默认值都是0，这样四个矩形正好重叠。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202182041197.png" alt="image-20220218164516649"></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p><strong>代码模式设置:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;设置样式</span><br><span class="line">   &#x2F;&#x2F;按钮设置黄色背景色</span><br><span class="line">   ui-&gt;pushButton-&gt;setStyleSheet(&quot;background:yellow&quot;);</span><br><span class="line">   &#x2F;&#x2F;设置按钮前景色——文字颜色</span><br><span class="line">   ui-&gt;pushButton-&gt;setStyleSheet(&quot;color:red&quot;);</span><br><span class="line">   &#x2F;&#x2F;后面的会将前面的覆盖掉，如果都想显示，就要将他们写在一起， 中间用分号隔开</span><br><span class="line">   setStyleSheet(&quot;QPushButton&#123;background:yellow;color:red&#125;&quot;);</span><br><span class="line">   ui-&gt;horizontalSlider-&gt;setStyleSheet(&quot;background:blue&quot;);</span><br></pre></td></tr></table></figure><p><strong>设计模式设置:</strong></p><ol><li>右键空白处，选择”改变样式表”，然后进行样式的编辑。(可以右键单击指定某个部件进行修改。)</li><li>部件属性区选择styleSheet也可进行样式的设置。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Qt样式表&quot;&gt;&lt;a href=&quot;#Qt样式表&quot; class=&quot;headerlink&quot; title=&quot;Qt样式表&quot;&gt;&lt;/a&gt;Qt样式表&lt;/h1&gt;&lt;h2 id=&quot;Qt样式表介绍&quot;&gt;&lt;a href=&quot;#Qt样式表介绍&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>DIY显示器+亚克力板制作外壳</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/17/DIY%E6%98%BE%E7%A4%BA%E5%99%A8+%E4%BA%9A%E5%85%8B%E5%8A%9B%E6%9D%BF%E5%88%B6%E4%BD%9C%E5%A4%96%E5%A3%B3/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/17/DIY%E6%98%BE%E7%A4%BA%E5%99%A8+%E4%BA%9A%E5%85%8B%E5%8A%9B%E6%9D%BF%E5%88%B6%E4%BD%9C%E5%A4%96%E5%A3%B3/</id>
    <published>2022-02-17T14:10:03.000Z</published>
    <updated>2022-02-17T14:15:05.990Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上个月，我重启了DIY显示器的这个想法。</p><p>于是，我买了显示器面板，驱动板，一些螺丝，以及几块亚克力板，由于我对屏幕的大小以及外壳要做的大小没有什么概念，加上我不会CAD，所以，我准备手工切割，用胶水拼接一个外壳。</p><p>先看一下效果吧。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172210587.jpeg" alt="img"></p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172210606.jpeg" alt="img"></p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172211595.jpeg" alt="img"></p><h2 id="制作流程"><a href="#制作流程" class="headerlink" title="制作流程"></a>制作流程</h2><p><strong>大致制作流程如下：</strong></p><p>1.用一块亚克力板做底板，根据显示器面板、驱动板的大小以及四个角的孔位打孔，确定摆放位置。</p><p>并将螺丝+双通尼龙柱固定在显示器面板所要放置的四个角落中。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172211488.png" alt="img"></p><p>2.根据需要的大小将四周多余的切掉。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172211775.png" alt="img"></p><p>3.根据大小切割出四周所需要的板子。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172211883.png" alt="img"></p><p>4.用热熔胶将周围固定。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172211748.png" alt="img"></p><p>5.根据需要在四周开孔，用水将粉末碎屑冲洗干净，加胶固定。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172211757.png" alt="img"></p><p>6.连接固定各个零件，完成。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172211285.png" alt="img"></p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172211796.png" alt="img"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul><li> 在制作的过程中，最费时费力以及最难的就是亚克力板的切割了，没想到3mm就这么难切。 </li><li> 先用笔画线，然后用尺子抵着用勾刀划。划呀划呀划， 差不多了，一掰就开了(熟练了先用尺子比着用勾刀划个几刀后就可以把尺子拿走了，沿着痕迹划就行)。 </li><li> 打孔也比较费劲，可以用电钻开孔，然后用边上蹭，或用<strong>锉</strong>来回蹭， </li><li> 开始切得七扭八歪的，后来慢慢熟练了，会好一些。 </li><li> 本来准备用亚克力胶水粘的，感觉效果不好，所以我就用<strong>热熔胶</strong>了。 </li><li> 热熔胶凝固的速度很快，开始我想先挤一道，然后将板子放到上面，结果我刚放就凝固了，所以要先将板子立好，然后沿着根底下挤胶。 </li><li> 各个螺丝的点位如果高度不够可以用垫片垫。 </li><li><strong>做之前量一下或估计一下所需要的各个材料大小</strong>。 </li><li>如果都测量好了，建议让商家裁剪，会CAD更好。</li><li>TN屏的可视角度较小，相对于IPS屏来说。</li><li>看久了高色域屏，看低色域会有所不适应。</li><li>不游戏的话，高低刷屏幕差别不大。</li></ul><p>热熔胶凝固的速度很快，开始我想先挤一道，然后将板子放到上面，我刚放就凝固了，所以要先将板子立好，然后沿着根底下挤胶。</p><h2 id="所需材料及工具"><a href="#所需材料及工具" class="headerlink" title="所需材料及工具"></a>所需材料及工具</h2><p><strong>材料</strong>：</p><ul><li>40cm * 30cm *3mm的亚克力板2块，可以多买几块裁着练手。</li><li>M2螺丝25mm若干</li><li>M2双通尼龙六角柱18mm若干</li><li> 2mm * 4.5mm * 0.6mm尼龙塑料垫片若干 </li><li> M2螺丝8mm若干 </li><li>M2螺母若干</li><li>15.6英寸显示器面板</li><li>驱动板(注意支持你的显示器面板)，电源。</li><li>hdmi线</li></ul><p><strong>工具</strong>：</p><ul><li>电钻</li><li>钳子</li><li>2mm钻头，以及更大的钻头用来开孔。</li><li>锉</li><li>M2螺丝对应的螺丝刀，建议可拆卸用电钻往里打。</li><li>热熔胶枪+热熔胶</li><li>勾刀</li><li>钢尺</li><li>笔</li></ul><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>主要花费：</p><table><thead><tr><th>物品</th><th>价格</th></tr></thead><tbody><tr><td>显示器面板</td><td>228</td></tr><tr><td>驱动板电源套装</td><td>75.9</td></tr><tr><td>亚克力板 x 4</td><td>60</td></tr><tr><td>hdmi线</td><td>9.9</td></tr><tr><td>螺丝</td><td>25.14</td></tr><tr><td>钻头 x 2</td><td>4</td></tr><tr><td>总计</td><td>402.94</td></tr></tbody></table><p>我的材料买多了，所以花费多一些，还有显示器面板，如果多蹲一蹲是有可能在小黄鱼蹲到更便宜的。</p><p>我这个不叫”DIY便携式显示器”是因为我不会背着它来回跑，只是放到固定的位置，由我来用。</p><p>录的视频还没有剪，做好了我会将链接放到文章最后。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202172211164.png" alt="img"></p><p>最后感谢你的阅读，如果对你有帮助，希望能给我点个赞。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上个月，我重启了DIY显示器的这个想法。&lt;/p&gt;
&lt;p&gt;于是，我买了显示器面板，驱动板，一些螺丝，以及几块亚克力板，由于我对屏幕的大小以及外</summary>
      
    
    
    
    <category term="其他" scheme="http://blog.zhaoyuxuan.xyz/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="-DIY" scheme="http://blog.zhaoyuxuan.xyz/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>【Python】nonebot学习(1)</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/14/%E3%80%90Python%E3%80%91nonebot%E5%AD%A6%E4%B9%A0(1)/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/14/%E3%80%90Python%E3%80%91nonebot%E5%AD%A6%E4%B9%A0(1)/</id>
    <published>2022-02-14T09:34:28.000Z</published>
    <updated>2022-02-14T09:51:05.817Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nonebot学习-1"><a href="#nonebot学习-1" class="headerlink" title="nonebot学习(1)"></a>nonebot学习(1)</h1><p>具体的安装使用部署流程还请见其他作者的文章。</p><ul><li><p>使用nb run指令运行</p></li><li><p>从window下迁移到linux环境，记得安装相应的包。</p></li></ul><p>报错提示ModuleNotFoundError:No module named ‘xxx’</p><ul><li> ubuntu环境下部署</li></ul><p>下载对应的版本，更改权限(777)，安装脚手架pip install nb-cli，安装失败，可能是权限不够，切换至root用户安装。</p><ul><li>ubuntu挂到后台</li></ul><p>nohup xxx &amp;，例如：nohup nb run &amp;。jobs查看nohup挂到后台的程序，关闭终端后就看不见了。</p><p>若关闭进程，使用ps -ef查看所有进程，找到对应的ID,kill掉。</p><p>ls -a查看当前目录下所有文件(包括隐藏文件)。</p><ul><li>ubuntu窗口</li></ul><p>screen -R xxx新建窗口, alt+a+d退出窗口，screen -r xxx恢复窗口。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;nonebot学习-1&quot;&gt;&lt;a href=&quot;#nonebot学习-1&quot; class=&quot;headerlink&quot; title=&quot;nonebot学习(1)&quot;&gt;&lt;/a&gt;nonebot学习(1)&lt;/h1&gt;&lt;p&gt;具体的安装使用部署流程还请见其他作者的文章。&lt;/p&gt;
&lt;ul&gt;
</summary>
      
    
    
    
    <category term="python" scheme="http://blog.zhaoyuxuan.xyz/categories/python/"/>
    
    
    <category term="-python" scheme="http://blog.zhaoyuxuan.xyz/tags/python/"/>
    
    <category term="-nonebot" scheme="http://blog.zhaoyuxuan.xyz/tags/nonebot/"/>
    
  </entry>
  
  <entry>
    <title>【Python】Python爬虫爬取豆瓣电影top榜</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/09/%E3%80%90Python%E3%80%91Python%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1top%E6%A6%9C/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/09/%E3%80%90Python%E3%80%91Python%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1top%E6%A6%9C/</id>
    <published>2022-02-09T13:17:05.000Z</published>
    <updated>2022-02-09T13:23:02.632Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>相关视频</strong>——<a href="https://www.bilibili.com/video/BV12E411A7ZQ?%E3%80%81">Python爬虫编程基础5天速成（2021全新合集）Python入门+数据分析</a></p><hr><p><strong>找到一个div,在div里面翻找你要的内容。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span>  BeautifulSoup      <span class="comment">#网页解析</span></span><br><span class="line"><span class="keyword">import</span>  re                          <span class="comment">#正则表达式，进行文字匹配</span></span><br><span class="line"><span class="keyword">import</span>  urllib.request,urllib.error <span class="comment">#制定URL,获取网页数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#正则表达式</span></span><br><span class="line"><span class="comment">#影片详情链接</span></span><br><span class="line">findLink = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;a href=&#x27;</span><span class="string">&#x27;(.*?)&#x27;</span><span class="string">&#x27;&gt;&#x27;</span>) <span class="comment">#创建正则表达式对象，表示规则(字符串的模式)</span></span><br><span class="line"><span class="comment">#影片片名</span></span><br><span class="line">findImgSrc = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;img.*src=&quot;(.*?)&quot;&#x27;</span>,re.S)<span class="comment">#re.S让换行符包含在字符中</span></span><br><span class="line"><span class="comment">#影片名</span></span><br><span class="line">findTitle = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;title&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="comment">#1.爬取网页</span></span><br><span class="line">    baseurl = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span></span><br><span class="line">    datalist = getData(baseurl)</span><br><span class="line"></span><br><span class="line"><span class="comment">#爬取网页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getData</span>(<span class="params">baseurl</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">1</span>):<span class="comment">#前25个</span></span><br><span class="line">        url = baseurl + <span class="built_in">str</span>(i*<span class="number">25</span>)</span><br><span class="line">        html = askURL(url) <span class="comment">#保存获取到的网页源码</span></span><br><span class="line">        <span class="comment"># 2.逐一解析数据</span></span><br><span class="line">        soup = BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)<span class="comment">#html解析器</span></span><br><span class="line">        <span class="comment"># div这个东西，名字属性是item,_表示属性值</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&quot;item&quot;</span>):<span class="comment">#在一个一个的div class=item里面找</span></span><br><span class="line">            data = [] <span class="comment">#保存一部电影的所有信息</span></span><br><span class="line">            item = <span class="built_in">str</span>(item)<span class="comment">#转换成字符串</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># re库用来通过正则表达式查找指定的字符串</span></span><br><span class="line">            <span class="comment">#根据正则表达式匹配对象，0表示第一个</span></span><br><span class="line">            <span class="comment">#正则表达式，要筛选的字符串</span></span><br><span class="line">            link = re.findall(findLink,item)[<span class="number">0</span>]<span class="comment">#拿到链接</span></span><br><span class="line">            data.append(link)</span><br><span class="line">            imgSrc = re.findall(findImgSrc,item)[<span class="number">0</span>]</span><br><span class="line">            data.append(imgSrc)</span><br><span class="line">            titles = re.findall(findTitle,item)</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">len</span>(titles)==<span class="number">2</span>):<span class="comment">#如果有两个名字</span></span><br><span class="line">                ctitle = titles[<span class="number">0</span>]<span class="comment">#添加中文名</span></span><br><span class="line">                data.append(ctitle)</span><br><span class="line">                otitle = titles[<span class="number">1</span>].replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&quot;</span>)<span class="comment">#去掉/</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(titles[<span class="number">0</span>])</span><br><span class="line">                data.append(<span class="string">&#x27; &#x27;</span>)<span class="comment">#留空——匹配格式</span></span><br><span class="line">            print(data)</span><br><span class="line"></span><br><span class="line"><span class="comment">#得到指定一个URL的网页内容</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">askURL</span>(<span class="params">url</span>):</span></span><br><span class="line">   <span class="comment">#模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="comment">#注意空格</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla / 5.0(Windows NT 10.0;Win64;x64) AppleWebKit / 537.36(KHTML, likeGecko) Chrome / 96.0.4664.110Safari / 537.36&quot;</span></span><br><span class="line">    &#125; <span class="comment">#用户代练，表示告诉豆瓣服务器，我们是什么类型的机器、浏览器，本质上就是告诉浏览器，我们可以接收什么水平的文件内容</span></span><br><span class="line">    request = urllib.request.Request(url,headers=head)</span><br><span class="line">    html = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">       response = urllib.request.urlopen(request)</span><br><span class="line">       html = response.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">       <span class="comment">#print(html)</span></span><br><span class="line">       <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e,<span class="string">&quot;code&quot;</span>):</span><br><span class="line">            print(e.code)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e,<span class="string">&quot;reason&quot;</span>):</span><br><span class="line">            print(e.reason )</span><br><span class="line"></span><br><span class="line"><span class="comment">#这里作为程序入口</span></span><br><span class="line"><span class="keyword">if</span>  __name__ == <span class="string">&quot;__main__&quot;</span>: <span class="comment">#当前程序执行时</span></span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;相关视频&lt;/strong&gt;——&lt;a href=&quot;https://www.bilibili.com/video/BV12E411A7ZQ?%E3%80%81&quot;&gt;Python爬虫编程基础5天速成（2021全新合集）Python入门+数据分析&lt;/a&gt;&lt;/</summary>
      
    
    
    
    <category term="Python" scheme="http://blog.zhaoyuxuan.xyz/categories/Python/"/>
    
    
    <category term="-Python" scheme="http://blog.zhaoyuxuan.xyz/tags/Python/"/>
    
    <category term="-爬虫" scheme="http://blog.zhaoyuxuan.xyz/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT模型/视图编程</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/06/%E3%80%90QT%E3%80%91QT%E6%A8%A1%E5%9E%8B%E8%A7%86%E5%9B%BE%E7%BC%96%E7%A8%8B/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/06/%E3%80%90QT%E3%80%91QT%E6%A8%A1%E5%9E%8B%E8%A7%86%E5%9B%BE%E7%BC%96%E7%A8%8B/</id>
    <published>2022-02-06T09:51:01.000Z</published>
    <updated>2022-02-06T09:56:59.574Z</updated>
    
    <content type="html"><![CDATA[<h1 id="模型-视图编程"><a href="#模型-视图编程" class="headerlink" title="模型/视图编程"></a>模型/视图编程</h1><p>Qt中的模型/视图架构用来实现大量的数据存储、处理及显示。</p><p>MVC(Model-View-Controller)包括了3个组件：模型(model)是应用对象，用来表示数据；视图(View)是模型的用户界面，用来显示数据；控制(Controller)定义了用户界面对用户输入的反应方式。</p><p>委托(Delegate)用于定制数据的渲染和编辑方式。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202061756409.png" alt="image-20220203134951360"></p><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>所有的模型都基于QAbstractItemModel类，该类提供了十分灵活的接口来处理各种视图，这些视图的数据表现形式为表格(table)、列表(list)、树(tree)。</p><p>Qt提供了一些现成的模型来处理数据项:</p><p>QStringListModel存储简单的QString项目列表;</p><p>QStandardItemModel管理复杂的属性结构数据项，每一个数据项可以包含任意的数据；</p><p>QFileSystemModel、QSqlTableModel和QSqlRelationTableModel用来访问数据库。</p><p>当标准模型还无法满足需要时，可子类化QAbstractItemModel、QAbstractListModel或QAbstractTableModel来创建自定义的模型。</p><p><strong>常见的3种模型为列表模型、表格模型、树模型，如下图所示:</strong><br><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202031619351.png" alt="image-20220203161907307"></p><p>为确保数据的表示与数据获取相分离，Qt引入了模型索引的概念，输入和委托均可通过模型索引来请求数据并显示。只有模型需要知道怎样获取数据，被模型管理的数据类型可以被广泛的定义。模型索引包含一个指针，指向创建他们的模型，使用多个模型时可避免混淆。模型索引QModeIIndex类提供对一块数据的临时引用， 用来修改或检索模型中的数据，获取一个数据项的模型索引必须指定模型的3个属性：行号、列号和父项的模型索引。如:</p><p>QModelIndex index = model-&gt;index(row,column,parent)；</p><p>也可以通过模型指定的相关数据项对应的模型索引以及特定的角色来获取需要的类型数据，如:<br>QVariant value = model-&gt;data(index,role);</p><p><strong>常用的角色类型:</strong><br><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202061756428.png" alt="image-20220203174738323"></p><p><strong>示例:</strong><br><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202031748877.png" alt="image-20220203174829807"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QTreeView&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QStandardItemModel&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc,argv)</span></span>;</span><br><span class="line">    <span class="comment">//创建标准项模型</span></span><br><span class="line">    QStandardItemModel model;</span><br><span class="line">    <span class="comment">//获取标准项模型的根项，跟项式不可见的</span></span><br><span class="line">    QStandardItem* parentItem = model.invisibleRootItem();</span><br><span class="line">    <span class="comment">//创建标准箱item0，并设置文本</span></span><br><span class="line">    QStandardItem* item0 = <span class="keyword">new</span> QStandardItem;</span><br><span class="line">    item0-&gt;setText(QString(<span class="string">&quot;A&quot;</span>));</span><br><span class="line">    <span class="function">QPixmap <span class="title">pixmap0</span><span class="params">(<span class="number">50</span>,<span class="number">50</span>)</span></span>;</span><br><span class="line">    pixmap0.fill(Qt::red);</span><br><span class="line">    item0-&gt;setIcon(QIcon(pixmap0));</span><br><span class="line">    item0-&gt;setToolTip(QString(<span class="string">&quot;A项&quot;</span>));</span><br><span class="line">    <span class="comment">//将item0作为父项的子项</span></span><br><span class="line">    parentItem-&gt;appendRow(item0);</span><br><span class="line">    parentItem = item0;</span><br><span class="line">    <span class="comment">//创建item0的子项</span></span><br><span class="line">    QStandardItem* item1 = <span class="keyword">new</span> QStandardItem;</span><br><span class="line">    item1-&gt;setText(QString(<span class="string">&quot;B&quot;</span>));</span><br><span class="line">    <span class="function">QPixmap <span class="title">pixmap1</span><span class="params">(<span class="number">50</span>,<span class="number">50</span>)</span></span>;</span><br><span class="line">    pixmap1.fill(Qt::blue);</span><br><span class="line">    item1-&gt;setIcon(pixmap1);</span><br><span class="line">    item1-&gt;setToolTip(QString(<span class="string">&quot;B项&quot;</span>));</span><br><span class="line"></span><br><span class="line">    QStandardItem* item2 = <span class="keyword">new</span> QStandardItem;</span><br><span class="line">    <span class="function">QPixmap <span class="title">pixmap2</span><span class="params">(<span class="number">50</span>,<span class="number">50</span>)</span></span>;</span><br><span class="line">    pixmap2.fill(Qt::green);</span><br><span class="line">    item2-&gt;setData(<span class="string">&quot;C&quot;</span>,Qt::EditRole);</span><br><span class="line">    item2-&gt;setData(<span class="string">&quot;indexC&quot;</span>,Qt::ToolTipRole);</span><br><span class="line">    item2-&gt;setData(QIcon(pixmap2),Qt::DecorationRole);</span><br><span class="line"></span><br><span class="line">    parentItem-&gt;appendRow(item1);</span><br><span class="line">    parentItem-&gt;appendRow(item2);</span><br><span class="line">    <span class="comment">//在树视图中显示数据</span></span><br><span class="line">    QTreeView view;</span><br><span class="line">    view.setModel(&amp;model);</span><br><span class="line">    view.show();</span><br><span class="line">    <span class="comment">//模型问数据</span></span><br><span class="line">    QModelIndex indexA = model.index(<span class="number">0</span>,<span class="number">0</span>,QModelIndex());</span><br><span class="line">    qDebug()&lt;&lt;<span class="string">&quot;indexA row count:&quot;</span>&lt;&lt;model.rowCount(indexA);</span><br><span class="line">    QModelIndex indexB = model.index(<span class="number">0</span>,<span class="number">0</span>,indexA);</span><br><span class="line">    qDebug()&lt;&lt;<span class="string">&quot;indexB text:&quot;</span>&lt;&lt;model.data(indexB,Qt::EditRole).toString();</span><br><span class="line">    qDebug()&lt;&lt;<span class="string">&quot;indexB toolTip:&quot;</span>&lt;&lt;model.data(indexB,Qt::ToolTipRole).toString();</span><br><span class="line">    <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>Qt提供了QListView、QTabelView视图、QTreeView视图分别实现列表、表格与树视图效果。QListView将数据项显示为一个列表；QTableView将模型中的数据显示在一个表格中；QTreeView将模型中的数据项显示在具有层次的列表中。QTableView和QTreeView在显示项目的时候同时还可以显示标头，通过QHeaderView类实现。自定义视图类是基于QAbstractItemView抽象基类，如实现条形图，饼状图等特殊显示方式。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202041213743.png" alt="image-20220204121337670"></p><hr><p><strong>示例1:</strong></p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202061756252.png" alt="image-20220204121752455"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QAbstractItemModel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QAbstractItemView&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QDirModel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QTreeView&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QListView&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QTableView&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QSplitter&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QApplication <span class="title">app</span><span class="params">(argc,argv)</span></span>;</span><br><span class="line">    <span class="comment">//创建模型</span></span><br><span class="line">    QDirModel model;</span><br><span class="line">    <span class="comment">//创建树视图、列表视图、表格视图</span></span><br><span class="line">    QTreeView tree;</span><br><span class="line">    QListView <span class="built_in">list</span>;</span><br><span class="line">    QTableView table;</span><br><span class="line">     <span class="comment">//视图设置模型</span></span><br><span class="line">     tree.setModel(&amp;model);</span><br><span class="line">     <span class="built_in">list</span>.setModel(&amp;model);</span><br><span class="line">     table.setModel(&amp;model);</span><br><span class="line">    <span class="comment">//设置视图对象的选择方式为多选，list/table选择方式同tree</span></span><br><span class="line">     tree.setSelectionMode(QAbstractItemView::MultiSelection);</span><br><span class="line">     <span class="built_in">list</span>.setSelectionMode(tree.selectionMode());</span><br><span class="line">     table.setSelectionMode(tree.selectionMode());</span><br><span class="line">    <span class="comment">//树视图双击信号发射后，列表及表格视图刷新内容</span></span><br><span class="line">    QObject::connect(&amp;tree,SIGNAL(doubleClicked(QModelIndex)),&amp;<span class="built_in">list</span>,SLOT(setRootIndex(QModelIndex)) );</span><br><span class="line">    QObject::connect(&amp;tree,SIGNAL(doubleClicked(QModelIndex)),&amp;table,SLOT(setRootIndex(QModelIndex)) );</span><br><span class="line">     QSplitter* splitter = <span class="keyword">new</span> QSplitter;</span><br><span class="line">     splitter-&gt;addWidget(&amp;tree);</span><br><span class="line">     splitter-&gt;addWidget(&amp;<span class="built_in">list</span>);</span><br><span class="line">     splitter-&gt;addWidget(&amp;table);</span><br><span class="line">     splitter-&gt;setWindowTitle(QString(<span class="string">&quot;模型/视图&quot;</span>));</span><br><span class="line">     splitter-&gt;show();</span><br><span class="line">     <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>示例2:</strong></p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202041153536.png" alt="image-20220204115328476"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;weaponmodel.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Weaponmodel::Weaponmodel(QObject* parent):QAbstractTableModel(parent)</span><br><span class="line">&#123;</span><br><span class="line">    armyMap[<span class="number">1</span>] = QString(<span class="string">&quot;空军&quot;</span>);</span><br><span class="line">    armyMap[<span class="number">2</span>] = QString(<span class="string">&quot;海军&quot;</span>);</span><br><span class="line">    armyMap[<span class="number">3</span>] = QString(<span class="string">&quot;陆军&quot;</span>);</span><br><span class="line">    armyMap[<span class="number">4</span>] = QString(<span class="string">&quot;海军陆战队&quot;</span>);</span><br><span class="line">    weaponMap[<span class="number">1</span>] = QString(<span class="string">&quot;战斗机1&quot;</span>);</span><br><span class="line">    weaponMap[<span class="number">2</span>] = QString(<span class="string">&quot;战斗机2&quot;</span>);</span><br><span class="line">    weaponMap[<span class="number">3</span>] = QString(<span class="string">&quot;战斗机3&quot;</span>);</span><br><span class="line">    weaponMap[<span class="number">4</span>] = QString(<span class="string">&quot;战斗机4&quot;</span>);</span><br><span class="line">    weaponMap[<span class="number">5</span>] = QString(<span class="string">&quot;战斗机5&quot;</span>);</span><br><span class="line">    weaponMap[<span class="number">6</span>] = QString(<span class="string">&quot;战斗机6&quot;</span>);</span><br><span class="line">    weaponMap[<span class="number">7</span>] = QString(<span class="string">&quot;战斗机7&quot;</span>);</span><br><span class="line">    weaponMap[<span class="number">8</span>] = QString(<span class="string">&quot;战斗机8&quot;</span>);</span><br><span class="line">    populateModel();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Weaponmodel::rowCount</span><span class="params">(<span class="keyword">const</span> QModelIndex &amp;parent)</span><span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> army.size();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Weaponmodel::columnCount</span><span class="params">(<span class="keyword">const</span> QModelIndex &amp;parent)</span><span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回指定索引的数据</span></span><br><span class="line"><span class="function">QVariant <span class="title">Weaponmodel::data</span><span class="params">(<span class="keyword">const</span> QModelIndex &amp;index, <span class="keyword">int</span> role)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!index.isValid())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> QVariant();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(role == Qt::DisplayRole)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (index.column()) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> army[army[index.row()]];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> weaponMap[weaponType[index.row()]];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> weapon[index.row()];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> QVariant();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> QVariant();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QVariant <span class="title">Weaponmodel::headerData</span><span class="params">(<span class="keyword">int</span> section, Qt::Orientation orientation, <span class="keyword">int</span> role)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(role == Qt::DisplayRole &amp;&amp; orientation == Qt::Horizontal)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> header[section];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> QAbstractTableModel::headerData(section,orientation,role);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Weaponmodel::populateModel</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     header&lt;&lt;QString(<span class="string">&quot;军种&quot;</span>)&lt;&lt;QString(<span class="string">&quot;种类&quot;</span>)&lt;&lt;QString(<span class="string">&quot;武器&quot;</span>);</span><br><span class="line">     army&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="number">2</span>&lt;&lt;<span class="number">3</span>&lt;&lt;<span class="number">4</span>&lt;&lt;<span class="number">2</span>&lt;&lt;<span class="number">4</span>&lt;&lt;<span class="number">3</span>&lt;&lt;<span class="number">1</span>;</span><br><span class="line">     weaponType&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="number">3</span>&lt;&lt;<span class="number">5</span>&lt;&lt;<span class="number">7</span>&lt;&lt;<span class="number">4</span>&lt;&lt;<span class="number">8</span>&lt;&lt;<span class="number">6</span>&lt;&lt;<span class="number">2</span>;</span><br><span class="line">     weapon&lt;&lt;QString(<span class="string">&quot;B-2&quot;</span>)&lt;&lt;QString(<span class="string">&quot;尼尔兹级&quot;</span>)&lt;&lt;QString(<span class="string">&quot;阿帕奇&quot;</span>)&lt;&lt;QString(<span class="string">&quot;黄蜂级&quot;</span>)&lt;&lt;QString(<span class="string">&quot;比例伯克级&quot;</span>)&lt;&lt;QString(<span class="string">&quot;AAAV&quot;</span>)&lt;&lt;QString(<span class="string">&quot;M1A1&quot;</span>)&lt;&lt;QString(<span class="string">&quot;F-22&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>示例3</strong></p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202061756028.png" alt="image-20220205110959913"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stringlistmodel.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">StringListModel::rowCount</span><span class="params">(<span class="keyword">const</span> QModelIndex &amp;parent)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> m_stringList.count();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QVariant <span class="title">StringListModel::data</span><span class="params">(<span class="keyword">const</span> QModelIndex &amp;index, <span class="keyword">int</span> role)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!index.isValid())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> QVariant();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(index.row() == m_stringList.size())</span><br><span class="line">    &#123;</span><br><span class="line">          <span class="keyword">return</span> QVariant();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(role == Qt::DisplayRole || role == Qt::EditRole)</span><br><span class="line">    &#123;</span><br><span class="line">          <span class="keyword">return</span> m_stringList.at(index.row());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">          <span class="keyword">return</span>  QVariant();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QVariant <span class="title">StringListModel::headerData</span><span class="params">(<span class="keyword">int</span> section, Qt::Orientation orientation, <span class="keyword">int</span> role)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(role != Qt::DisplayRole)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> QVariant();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//水平表头</span></span><br><span class="line">    <span class="keyword">if</span>(orientation == Qt::Horizontal)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> QString(<span class="string">&quot;column %1&quot;</span>).arg(section);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> QString(<span class="string">&quot;Row %1&quot;</span>).arg(section);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Qt::ItemFlags <span class="title">StringListModel::flags</span><span class="params">(<span class="keyword">const</span> QModelIndex &amp;index)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!index.isValid())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Qt::ItemIsEnabled;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> QAbstractItemModel::flags(index) | Qt::ItemIsEditable;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">StringListModel::setData</span><span class="params">(<span class="keyword">const</span> QModelIndex &amp;index, <span class="keyword">const</span> QVariant &amp;value, <span class="keyword">int</span> role)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//检测索引有效且项目可编辑</span></span><br><span class="line">    <span class="keyword">if</span>(index.isValid() &amp;&amp; role == Qt::EditRole)</span><br><span class="line">    &#123;</span><br><span class="line">        m_stringList.replace(index.row(),value.toString());</span><br><span class="line">        <span class="function">emit <span class="title">dataChanged</span><span class="params">(index,index)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">StringListModel::inseratRows</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">int</span> rows, <span class="keyword">const</span> QModelIndex &amp;index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//告知其它组建指定的行开始插入操作</span></span><br><span class="line">    beginInsertRows(QModelIndex(),position,position + rows <span class="number">-1</span> );</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> row = <span class="number">0</span> ; row &lt; rows; row++)</span><br><span class="line">    &#123;</span><br><span class="line">        m_stringList.insert(position,QString(<span class="string">&quot;你好&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//告知其它组件完成操作</span></span><br><span class="line">    endInsertRows();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">StringListModel::removeRows</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">int</span> rows, <span class="keyword">const</span> QModelIndex &amp;index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//告知其他组件指定的行开始删除操作</span></span><br><span class="line">    beginRemoveRows(QModelIndex(),position,position + rows - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> row = <span class="number">0</span> ; row &lt; rows;row++)</span><br><span class="line">    &#123;</span><br><span class="line">        m_stringList.removeAt(position);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//告知其它组件完成操作</span></span><br><span class="line">    endRemoveRows();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;stringlistmodel.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QListView&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QTableView&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QApplication <span class="title">app</span><span class="params">(argc,argv)</span></span>;</span><br><span class="line">    QStringList <span class="built_in">list</span>;</span><br><span class="line">    <span class="built_in">list</span>&lt;&lt;QString(&quot;太阳&quot;)&lt;&lt;QString(&quot;地球&quot;)&lt;&lt;QString(&quot;月亮&quot;)&lt;&lt;QString(&quot;木星&quot;);</span><br><span class="line">    StringListModel model(<span class="built_in">list</span>);//创建模型</span><br><span class="line">    model.insertRows(3,2);</span><br><span class="line">    model.removeRows(0,1);</span><br><span class="line"></span><br><span class="line">    QListView  listView;//创建列表视图</span><br><span class="line">    listView.setModel(&amp;model);//视图设置模型</span><br><span class="line">    listView.show();//视图显示</span><br><span class="line"></span><br><span class="line">    QTableView tableView;//创建表格视图</span><br><span class="line">    tableView.setModel(&amp;model);//视图设置模型</span><br><span class="line">    tableView.show();//视图显示</span><br><span class="line">    <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>示例4:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QStandardItem&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line">MainWindow::MainWindow(QWidget *parent) :</span><br><span class="line">    QMainWindow(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建标准项模型，7行4列</span></span><br><span class="line">    QStandardItemModel* model = <span class="keyword">new</span> QStandardItemModel(<span class="number">7</span>,<span class="number">4</span>,<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> row = <span class="number">0</span> ; row &lt;<span class="number">7</span> ;row++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> colum= <span class="number">0</span>;colum &lt; <span class="number">4</span>;colum++)</span><br><span class="line">        &#123;</span><br><span class="line">            QStandardItem* item = <span class="keyword">new</span> QStandardItem(QString(<span class="string">&quot;%1&quot;</span>).arg(row+<span class="number">4</span> +colum));</span><br><span class="line">            <span class="comment">//标准模型设置数据项</span></span><br><span class="line">            model-&gt;setItem(row,colum,item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    m_tableView = <span class="keyword">new</span> QTableView;</span><br><span class="line">    m_tableView-&gt;setModel(model);</span><br><span class="line">    setCentralWidget(m_tableView);<span class="comment">//设置主窗口的中心部件为表格视图</span></span><br><span class="line">    QItemSelectionModel *selectionModel = m_tableView-&gt;selectionModel();<span class="comment">//获取视图的选择模式</span></span><br><span class="line">    QModelIndex topLeft;<span class="comment">//左上角模型索引</span></span><br><span class="line">    QModelIndex bottomRight;<span class="comment">//右下角模型索引</span></span><br><span class="line">    topLeft = model-&gt;index(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    bottomRight = model-&gt;index(<span class="number">5</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="comment">//创建模型选择</span></span><br><span class="line">    <span class="function">QItemSelection <span class="title">selection</span><span class="params">(topLeft,bottomRight)</span></span>;</span><br><span class="line">    <span class="comment">//以选择的方式来选择项目</span></span><br><span class="line">    selectionModel-&gt;select(selection,QItemSelectionModel::Select);</span><br><span class="line">    <span class="comment">//添加动作addAction(动作文本，响应者，槽方法)</span></span><br><span class="line">    ui-&gt;menuBar-&gt;addAction(QString(<span class="string">&quot;当前项目&quot;</span>),<span class="keyword">this</span>,&amp;MainWindow::getCurrenItemData);</span><br><span class="line">    ui-&gt;menuBar-&gt;addAction(QString(<span class="string">&quot;切换选择&quot;</span>),<span class="keyword">this</span>,&amp;MainWindow::toggleSection);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关联选择模型的选择改变、当前项改变的信号</span></span><br><span class="line">    connect(selectionModel,&amp;QItemSelectionModel::selectionChanged,<span class="keyword">this</span>,&amp;MainWindow::updateSelection);</span><br><span class="line">    connect(selectionModel,&amp;QItemSelectionModel::currentChanged,<span class="keyword">this</span>,&amp;MainWindow::changeCurrent);</span><br><span class="line"></span><br><span class="line">    m_tableView2 = <span class="keyword">new</span> QTableView;</span><br><span class="line">    m_tableView2 -&gt;setWindowTitle(<span class="string">&quot;tableview2&quot;</span>);</span><br><span class="line">    m_tableView2-&gt;resize(<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">    m_tableView2-&gt;setModel(model);</span><br><span class="line">    m_tableView2-&gt;setSelectionModel(selectionModel);</span><br><span class="line">    m_tableView2-&gt;show();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~MainWindow()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::getCurrenItemData</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    qDebug()&lt;&lt;QString(<span class="string">&quot;当前项数据:&quot;</span>)&lt;&lt;m_tableView-&gt;selectionModel()-&gt;currentIndex().data().toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::toggleSection</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//左上角模型索引</span></span><br><span class="line">    QModelIndex topLeft = m_tableView-&gt;model()-&gt;index(<span class="number">0</span>,<span class="number">0</span>,QModelIndex());</span><br><span class="line">    <span class="comment">//右下角模型索引</span></span><br><span class="line">    QModelIndex bottomRight = m_tableView-&gt;model()-&gt;index(m_tableView-&gt;model()-&gt;rowCount((QModelIndex))<span class="number">-1</span>,m_tableView-&gt;model()-&gt;columnCount(QModelIndex())<span class="number">-1</span>,QModelIndex());</span><br><span class="line">    <span class="comment">//项选择</span></span><br><span class="line">    <span class="function">QItemSelection <span class="title">curSelection</span><span class="params">(topLeft,bottomRight)</span></span>;</span><br><span class="line">    m_tableView-&gt;selectionModel()-&gt;select(curSelection,QItemSelectionModel::Toggle);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::updateSelection</span><span class="params">(<span class="keyword">const</span> QItemSelection &amp;selected, <span class="keyword">const</span> QItemSelection &amp;deselected)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QModelIndex index;</span><br><span class="line">    <span class="comment">//indexes返回所有选择项的模型索引</span></span><br><span class="line">    QModelIndexList <span class="built_in">list</span> = selected.indexes();</span><br><span class="line">    <span class="comment">//给现在选择的项目填充数据</span></span><br><span class="line">    foreach (index,<span class="built_in">list</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QString text = QString(<span class="string">&quot;%1,%2&quot;</span>).arg(index.row()).arg(index.column());</span><br><span class="line">        m_tableView-&gt;model()-&gt;setData(index,text);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//清空 上一次选择的内容</span></span><br><span class="line">    <span class="built_in">list</span> = deselected.indexes();</span><br><span class="line">    foreach (index,<span class="built_in">list</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        m_tableView-&gt;model()-&gt;setData(index,<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::changeCurrent</span><span class="params">(<span class="keyword">const</span> QModelIndex &amp;current, <span class="keyword">const</span> QModelIndex &amp;previous)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    qDebug()&lt;&lt;QString(<span class="string">&quot;从(%1,%2)到(%3,%4)&quot;</span>).arg(previous.row()).arg(previous.column()).arg(current.row()).arg(current.column());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="委托"><a href="#委托" class="headerlink" title="委托"></a>委托</h2><p>在模型/视图框架中，QAbstractItemDelegate是委托类的抽象基类，Qt默认的委托实现由QStyledItemDelegate类提供，这也被用作Qt标准视图的默认委托，选择    QStyledItemDelegate或QItemDelegate中其一来为视图中的项目绘制和提供编辑器。不同的是QStyledItemDelegate使用当前的样式来绘制项目，实现自定义委托建议使用QStyledItemDelegate作为基类。</p><p>Qt提供了项目试图的便捷类，这些类底层通过模型/视图框架实现。这些部件分别是QListWidget提供一个项目列表，QTreeWidget显示一个多层次的树结构，QTableWidget提供了一个以项目作为单元的表格。它们每一个类都继承了QAbstractItemView类的行为。之所以成为便捷因其用起来比较简单，使用于少量的数据的存储和显示。因没有将视图与模型分离，所以没有视图类灵活，不能和任意的模型一起使用。</p><p><strong>通过自定义委托来实现更高级的渲染。</strong></p><p><strong>示例：QSpinbox</strong></p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202061706744.png" alt="image-20220206170615666"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;spinboxdelexgate.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QSpinBox&gt;</span></span></span><br><span class="line"></span><br><span class="line">SpinBoxDelexgate::SpinBoxDelexgate(QObject* parent):QItemDelegate(parent)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QWidget *<span class="title">SpinBoxDelexgate::createEditor</span><span class="params">(QWidget *parent, <span class="keyword">const</span> QStyleOptionViewItem &amp;option, <span class="keyword">const</span> QModelIndex &amp;index)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QSpinBox *editor = <span class="keyword">new</span> QSpinBox(parent);</span><br><span class="line">    editor-&gt;setMinimum(<span class="number">0</span>);<span class="comment">//最小值</span></span><br><span class="line">    editor-&gt;setMaximum(<span class="number">100</span>);<span class="comment">//最大值</span></span><br><span class="line">    <span class="keyword">return</span> editor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpinBoxDelexgate::setEditorData</span><span class="params">(QWidget *editor, <span class="keyword">const</span> QModelIndex &amp;index)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      <span class="keyword">int</span> value = index.model()-&gt;data(index,Qt::EditRole).toInt();</span><br><span class="line">      <span class="comment">//类型转换:QWidget* 转QSpinBox*</span></span><br><span class="line">      QSpinBox* spinBox = <span class="keyword">static_cast</span>&lt;QSpinBox*&gt;(editor);</span><br><span class="line">      <span class="comment">//编辑器设置数据</span></span><br><span class="line">      spinBox-&gt;setValue(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpinBoxDelexgate::updateEditorGeometry</span><span class="params">(QWidget *editor, <span class="keyword">const</span> QStyleOptionViewItem &amp;option, <span class="keyword">const</span> QModelIndex &amp;index)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//视图设置自定义委托</span></span><br><span class="line">    editor-&gt;setGeometry(option.rect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="便捷部件类"><a href="#便捷部件类" class="headerlink" title="便捷部件类"></a>便捷部件类</h2><p><strong>示例:</strong><br><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202061756349.png" alt="image-20220206174702701"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QListWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QTreeWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QTableWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QApplication <span class="title">app</span><span class="params">(argc,argv)</span></span>;</span><br><span class="line">    QListWidget listWidget;</span><br><span class="line">    <span class="comment">//添加项目</span></span><br><span class="line">    <span class="keyword">new</span> QListWidgetItem(<span class="string">&quot;天涯&quot;</span>,&amp;listWidget);</span><br><span class="line"></span><br><span class="line">    QListWidgetItem* listWidgetItem = <span class="keyword">new</span> QListWidgetItem;</span><br><span class="line">    listWidgetItem-&gt;setText(<span class="string">&quot;海角&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function">QPixmap <span class="title">pixmap</span><span class="params">(<span class="number">50</span>,<span class="number">50</span>)</span></span>;</span><br><span class="line">    pixmap.fill(Qt::blue);</span><br><span class="line">    listWidgetItem-&gt;setIcon(QIcon(pixmap));</span><br><span class="line">    listWidgetItem-&gt;setToolTip(<span class="string">&quot;大海的角落&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//部件插入项目</span></span><br><span class="line">    listWidget.insertItem(<span class="number">1</span>,listWidgetItem);</span><br><span class="line">    <span class="comment">//部件设置排序(降序)</span></span><br><span class="line">    listWidget.sortItems(Qt::DescendingOrder);</span><br><span class="line"></span><br><span class="line">    listWidget.show();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建树部件</span></span><br><span class="line">    QTreeWidget treeWidget;</span><br><span class="line">    <span class="comment">//设置列数</span></span><br><span class="line">    treeWidget.setColumnCount(<span class="number">2</span>);</span><br><span class="line">    QStringList headers;</span><br><span class="line">    headers&lt;&lt;<span class="string">&quot;名字&quot;</span>&lt;&lt;<span class="string">&quot;数量&quot;</span>;</span><br><span class="line">    <span class="comment">//设置头</span></span><br><span class="line">    treeWidget.setHeaderLabels(headers);</span><br><span class="line">    <span class="comment">//添加项目</span></span><br><span class="line">    QTreeWidgetItem *item1 = <span class="keyword">new</span> QTreeWidgetItem(&amp;treeWidget);<span class="comment">//指定父项</span></span><br><span class="line">    item1-&gt;setText(<span class="number">0</span>,<span class="string">&quot;开心超人&quot;</span>);</span><br><span class="line">    QTreeWidgetItem *item11 = <span class="keyword">new</span> QTreeWidgetItem(item1);</span><br><span class="line">    item11-&gt;setText(<span class="number">0</span>,<span class="string">&quot;甜心超人&quot;</span>);</span><br><span class="line">    item11-&gt;setText(<span class="number">1</span>,<span class="string">&quot;小心超人&quot;</span>);</span><br><span class="line">    <span class="comment">//添加项目，并指定它的前一个项目是item1</span></span><br><span class="line">    QTreeWidgetItem* item2 = <span class="keyword">new</span> QTreeWidgetItem(&amp;treeWidget,item1);</span><br><span class="line">    item2-&gt;setText(<span class="number">0</span>,<span class="string">&quot;小小怪&quot;</span>);</span><br><span class="line">    treeWidget.show();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建表格部件</span></span><br><span class="line">    <span class="function">QTableWidget <span class="title">tableWidget</span><span class="params">(<span class="number">3</span>,<span class="number">2</span>)</span></span>;</span><br><span class="line">    QTableWidgetItem *tableWidgetem = <span class="keyword">new</span> QTableWidgetItem(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">    tableWidget.setItem(<span class="number">1</span>,<span class="number">1</span>,tableWidgetem);</span><br><span class="line">    <span class="comment">//创建表格项目，作为表头</span></span><br><span class="line">    QTableWidgetItem* headerV = <span class="keyword">new</span> QTableWidgetItem(<span class="string">&quot;Cat&quot;</span>);</span><br><span class="line">    tableWidget.setVerticalHeaderItem(<span class="number">0</span>,headerV);</span><br><span class="line">    QTableWidgetItem* headerH = <span class="keyword">new</span> QTableWidgetItem(<span class="string">&quot;What&quot;</span>);</span><br><span class="line">    tableWidget.setHorizontalHeaderItem(<span class="number">0</span>,headerH);</span><br><span class="line">    tableWidget.show();</span><br><span class="line">    <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;模型-视图编程&quot;&gt;&lt;a href=&quot;#模型-视图编程&quot; class=&quot;headerlink&quot; title=&quot;模型/视图编程&quot;&gt;&lt;/a&gt;模型/视图编程&lt;/h1&gt;&lt;p&gt;Qt中的模型/视图架构用来实现大量的数据存储、处理及显示。&lt;/p&gt;
&lt;p&gt;MVC(Model-Vie</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT富文本</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/02/03/%E3%80%90QT%E3%80%91QT%E5%AF%8C%E6%96%87%E6%9C%AC/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/02/03/%E3%80%90QT%E3%80%91QT%E5%AF%8C%E6%96%87%E6%9C%AC/</id>
    <published>2022-02-03T04:25:16.000Z</published>
    <updated>2022-02-03T04:28:37.135Z</updated>
    
    <content type="html"><![CDATA[<h1 id="富文本"><a href="#富文本" class="headerlink" title="富文本"></a>富文本</h1><p>QTextEdit支持富文本处理，即文档中可使用多种格式，如文字、图片、表格等。</p><p>PlainText为纯文本。</p><p>由此可类比， windows的记事本就是纯文本编辑器，word就是富文本编辑器。</p><p>文档的光标主要基于QTextCursor类，文档的框架主要基于QTextDocument类。</p><p>一个富文本的文档结构主要分为几种元素:框架(QTextFrameFormat)、文本块(QTextBlock)、表格(QTextTable)、列表(QTxtList)。</p><p>每种元素的格式有相应的format类表示：框架格式(QTextDFrameFormat)、文本块格式(QTextBlockFormat)、表格格式(QText)、列表格式(QTextListFormat)。这些格式通常配合QTextCursor类使用。</p><p>QTextEdit类就是一个富文本编辑器，在构建QTextEdit类对象时就已经构建了一个QTextDocument类对象和一个QTextCursor类对象。只需调用他们相应的操作即可。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202031227890.png" alt="image-20220129211052245"></p><h2 id="文档边框格式"><a href="#文档边框格式" class="headerlink" title="文档边框格式"></a>文档边框格式</h2><p><strong>示例:</strong></p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202031227628.png" alt="image-20220129211226050"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line"> <span class="comment">//获取文档对象</span></span><br><span class="line">QTextDocument* document = ui-&gt;textEdit-&gt;document();</span><br><span class="line"><span class="comment">//获取根 框架</span></span><br><span class="line">QTextFrame *rootFrame = document-&gt;rootFrame();</span><br><span class="line"><span class="comment">//文档格式框架</span></span><br><span class="line">QTextFrameFormat format;</span><br><span class="line">format.setBorderBrush(Qt::red);<span class="comment">//边框颜色</span></span><br><span class="line">format.setBorder(<span class="number">3</span>);<span class="comment">//边界宽度</span></span><br><span class="line"><span class="comment">//设置文档框架格式</span></span><br><span class="line"> rootFrame-&gt;setFrameFormat(format);</span><br><span class="line"> <span class="comment">//设置文本边框风格</span></span><br><span class="line"> QTextFrameFormat frameFormat;</span><br><span class="line"> frameFormat.setBackground(Qt::lightGray);</span><br><span class="line"> frameFormat.setMargin(<span class="number">10</span>);<span class="comment">//设置边距</span></span><br><span class="line"> frameFormat.setPadding(<span class="number">5</span>);<span class="comment">//设置填衬</span></span><br><span class="line"> frameFormat.setBorder(<span class="number">2</span>);</span><br><span class="line"> frameFormat.setBorderStyle(QTextFrameFormat::BorderStyle_DotDash  );</span><br><span class="line"> QTextCursor cursor = ui-&gt;textEdit-&gt;textCursor();</span><br><span class="line"> cursor.insertFrame(frameFormat);</span><br></pre></td></tr></table></figure><hr><h2 id="文本个格式、文本块格式、字符格式"><a href="#文本个格式、文本块格式、字符格式" class="headerlink" title="文本个格式、文本块格式、字符格式"></a>文本个格式、文本块格式、字符格式</h2><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202031227842.png" alt="image-20220130182600946"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加工具栏行选项</span></span><br><span class="line"></span><br><span class="line">   QAction* action_textFrame = <span class="keyword">new</span> QAction(<span class="string">&quot;框架&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">   connect(action_textFrame,&amp;QAction::triggered,<span class="keyword">this</span>,&amp;MainWindow::showTextFrame);</span><br><span class="line">   ui-&gt;mainToolBar-&gt;addAction(action_textFrame);</span><br><span class="line"></span><br><span class="line">   QAction* action_textBlock = <span class="keyword">new</span> QAction(<span class="string">&quot;文本块&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">   connect(action_textBlock,&amp;QAction::triggered,<span class="keyword">this</span>,&amp;MainWindow::showTextBlock);</span><br><span class="line">   ui-&gt;mainToolBar-&gt;addAction(action_textBlock);<span class="comment">//添加到工具栏中</span></span><br><span class="line"></span><br><span class="line">   QAction* action_textFont = <span class="keyword">new</span> QAction(<span class="string">&quot;字体&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">   action_textFont-&gt;setCheckable(<span class="literal">true</span>);</span><br><span class="line">   connect(action_textFont,&amp;QAction::triggered,<span class="keyword">this</span>,&amp;MainWindow::setTextFont);</span><br><span class="line">   ui-&gt;mainToolBar-&gt;addAction(action_textFont);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::showTextFrame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QTextDocument* document  = ui-&gt;textEdit-&gt;document();<span class="comment">//获取文档对象</span></span><br><span class="line">    QTextFrame* frame = document-&gt;rootFrame();<span class="comment">//获取根框架</span></span><br><span class="line">    QTextFrame::iterator it;</span><br><span class="line">    <span class="keyword">for</span>(it = frame-&gt;begin();!(it.atEnd());it++)</span><br><span class="line">    &#123;</span><br><span class="line">        QTextFrame*childFrame  = it.currentFrame();<span class="comment">//获取当前框架指针</span></span><br><span class="line">        QTextBlock childBlock = it.currentBlock();<span class="comment">//获取当前文本块</span></span><br><span class="line">        <span class="keyword">if</span>(childFrame)</span><br><span class="line">        &#123;</span><br><span class="line">            qDebug()&lt;&lt;<span class="string">&quot;frame&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(childBlock.isValid())</span><br><span class="line">        &#123;</span><br><span class="line">            qDebug()&lt;&lt;<span class="string">&quot;block:&quot;</span>&lt;&lt;childBlock.text();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::showTextBlock</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QTextDocument* document =   ui-&gt;textEdit-&gt;document();</span><br><span class="line">    QTextBlock block = document-&gt;firstBlock();</span><br><span class="line">    <span class="comment">//document-&gt;blockCount()返回文本块个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span> ; i &lt; document-&gt;blockCount();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        qDebug()&lt;&lt;QString(<span class="string">&quot;文本块%1,文本块首行行号为:%2,长度:%3,内容%4&quot;</span>).arg(i).arg(block.firstLineNumber()).arg(block.length()).arg(block.text());</span><br><span class="line">        block = block.next();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::setTextFont</span><span class="params">(<span class="keyword">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(checked)</span><br><span class="line">    &#123;</span><br><span class="line">        QTextCursor cursor = ui-&gt;textEdit-&gt;textCursor();</span><br><span class="line">        <span class="comment">//文本块格式</span></span><br><span class="line">        QTextBlockFormat blockFormat;</span><br><span class="line">        <span class="comment">//居中对齐</span></span><br><span class="line">        blockFormat.setAlignment(Qt::AlignCenter);</span><br><span class="line">        cursor.insertBlock(blockFormat);</span><br><span class="line">        <span class="comment">//字符格式</span></span><br><span class="line">        QTextCharFormat charFormat;</span><br><span class="line">        <span class="comment">//设置背景色</span></span><br><span class="line">        charFormat.setBackground(Qt::lightGray);</span><br><span class="line">        <span class="comment">//设置字符前景色(字符颜色)</span></span><br><span class="line">        charFormat.setForeground(Qt::blue);</span><br><span class="line">         <span class="comment">//字体</span></span><br><span class="line">        charFormat.setFont(QFont(QString(<span class="string">&quot;宋体&quot;</span>),<span class="number">12</span>,QFont::Bold,<span class="literal">true</span>));</span><br><span class="line">        <span class="comment">//下划线</span></span><br><span class="line">        charFormat.setFontUnderline(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//设置字符格式</span></span><br><span class="line">        cursor.setCharFormat(charFormat);</span><br><span class="line">        cursor.insertText(<span class="string">&quot;嘻嘻&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="文档插入表格、列表、图片"><a href="#文档插入表格、列表、图片" class="headerlink" title="文档插入表格、列表、图片"></a>文档插入表格、列表、图片</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::insertTable</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QTextCursor cursor =  ui-&gt;textEdit-&gt;textCursor();</span><br><span class="line">    QTextTableFormat format;<span class="comment">//表格格式</span></span><br><span class="line">    format.setCellSpacing(<span class="number">2</span>);<span class="comment">//表格外边空白</span></span><br><span class="line">    format.setCellPadding(<span class="number">10</span>);<span class="comment">//表格内边空白</span></span><br><span class="line">    cursor.insertTable(<span class="number">3</span>, <span class="number">3</span>,format);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::insertList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QTextListFormat format;<span class="comment">//列表格式</span></span><br><span class="line">    format.setStyle(QTextListFormat::ListDecimal);<span class="comment">//数字编号</span></span><br><span class="line">    ui-&gt;textEdit-&gt;textCursor().insertList(format);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::insertImage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     QString filePath  = QFileDialog::getOpenFileName(<span class="keyword">this</span>,<span class="string">&quot;选择图片&quot;</span>,<span class="string">&quot;.&quot;</span>,<span class="string">&quot;JPEG(*.jpg *.jpeg);;&quot;</span><span class="string">&quot;GIF(*.gif);;&quot;</span><span class="string">&quot;PNG(*.png)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function">QUrl <span class="title">url</span><span class="params">(QString(<span class="string">&quot;file://%1&quot;</span>).arg(filePath))</span></span>;</span><br><span class="line"></span><br><span class="line">    QImage image = QImageReader(filePath).read();</span><br><span class="line">    QTextDocument* document = ui-&gt;textEdit-&gt;document();</span><br><span class="line">    <span class="comment">//文档添加图片资源</span></span><br><span class="line">    document-&gt;addResource(QTextDocument::ImageResource,url,QVariant(image));</span><br><span class="line">    QTextCursor cursor =ui-&gt;textEdit-&gt;textCursor();</span><br><span class="line">    QTextImageFormat imgFormat;</span><br><span class="line">    imgFormat.setWidth(image.width());</span><br><span class="line">    imgFormat.setHeight(image.height());</span><br><span class="line">    imgFormat.setName(url.toString());</span><br><span class="line">    cursor.insertImage(imgFormat);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="语法高亮"><a href="#语法高亮" class="headerlink" title="语法高亮"></a>语法高亮</h2><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202022331193.png" alt="image-20220202233158144"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MySyntaxHighlighter::highlightBlock</span><span class="params">(<span class="keyword">const</span> QString &amp;text)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QTextCharFormat format;<span class="comment">//字符格式</span></span><br><span class="line">    format.setFontWeight(QFont::Bold);</span><br><span class="line">    format.setBackground(Qt::red);</span><br><span class="line">    format.setForeground(Qt::green) ;</span><br><span class="line">    QString pattern = <span class="string">&quot;\\bgood\\b&quot;</span>;<span class="comment">//匹配单词边界</span></span><br><span class="line">    <span class="function">QRegExp <span class="title">expression</span><span class="params">(pattern)</span></span>;</span><br><span class="line">    <span class="keyword">int</span> index = text.indexOf(expression);</span><br><span class="line">   <span class="keyword">while</span>(index &gt;= <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> length = expression.matchedLength();<span class="comment">//匹配到的字符长度</span></span><br><span class="line">        setFormat(index,length,format);</span><br><span class="line">        index = text.indexOf(expression,index + length);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="字符查找"><a href="#字符查找" class="headerlink" title="字符查找"></a>字符查找</h2><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202202031227638.png" alt="image-20220203120216663"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">    QAction* action_textFind = <span class="keyword">new</span> QAction(<span class="string">&quot;查找&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">    connect(action_textFind,&amp;QAction::triggered,<span class="keyword">this</span>,&amp;MainWindow::textFind);</span><br><span class="line">    ui-&gt;mainToolBar-&gt;addAction(action_textFind);</span><br><span class="line">    m_findDialg = <span class="keyword">new</span> QDialog(<span class="keyword">this</span>);<span class="comment">//查找对话框</span></span><br><span class="line">    m_lineEdit = <span class="keyword">new</span> QLineEdit(m_findDialg);<span class="comment">//查找输入框</span></span><br><span class="line">    QPushButton* btn = <span class="keyword">new</span> QPushButton(m_findDialg);</span><br><span class="line">    btn-&gt;setText(<span class="string">&quot;查找下一个&quot;</span>);</span><br><span class="line">    connect(btn,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;MainWindow::textNext);</span><br><span class="line">    QVBoxLayout* layout = <span class="keyword">new</span> QVBoxLayout;</span><br><span class="line">    layout-&gt;addWidget(m_lineEdit);</span><br><span class="line">    layout-&gt;addWidget(btn);</span><br><span class="line">    m_findDialg-&gt;setLayout(layout);</span><br><span class="line">```</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::textFind</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_findDialg-&gt;show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::textNext</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString strFind =  m_lineEdit-&gt;text();</span><br><span class="line">    <span class="keyword">bool</span> isFind = ui-&gt;textEdit-&gt;find(strFind,QTextDocument::FindBackward);</span><br><span class="line">    <span class="keyword">if</span>(isFind)</span><br><span class="line">    &#123;</span><br><span class="line">        qDebug()&lt;&lt;QString(<span class="string">&quot;行号:%1,列号:%2&quot;</span>)</span><br><span class="line">                  .arg(ui-&gt;textEdit-&gt;textCursor().blockNumber())</span><br><span class="line">                  .arg(ui-&gt;textEdit-&gt;textCursor().columnNumber());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;富文本&quot;&gt;&lt;a href=&quot;#富文本&quot; class=&quot;headerlink&quot; title=&quot;富文本&quot;&gt;&lt;/a&gt;富文本&lt;/h1&gt;&lt;p&gt;QTextEdit支持富文本处理，即文档中可使用多种格式，如文字、图片、表格等。&lt;/p&gt;
&lt;p&gt;PlainText为纯文本。&lt;/p&gt;</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT状态栏、任务栏、工具栏</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/01/29/%E3%80%90QT%E3%80%91QT%E7%8A%B6%E6%80%81%E6%A0%8F%E3%80%81%E4%BB%BB%E5%8A%A1%E6%A0%8F%E3%80%81%E5%B7%A5%E5%85%B7%E6%A0%8F/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/01/29/%E3%80%90QT%E3%80%91QT%E7%8A%B6%E6%80%81%E6%A0%8F%E3%80%81%E4%BB%BB%E5%8A%A1%E6%A0%8F%E3%80%81%E5%B7%A5%E5%85%B7%E6%A0%8F/</id>
    <published>2022-01-29T05:45:44.000Z</published>
    <updated>2022-01-29T05:46:10.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="菜单栏、工具栏、状态栏"><a href="#菜单栏、工具栏、状态栏" class="headerlink" title="菜单栏、工具栏、状态栏"></a>菜单栏、工具栏、状态栏</h1><p>主窗口框架(QMainWindow)拥有自己的布局，包括以下组件:</p><ul><li>菜单栏</li></ul><p>菜单栏包含了一个下拉菜单项的列表，这些菜单项通过QAction动作类实现。一个主窗口只能有一个菜单栏。</p><ul><li>工具栏</li></ul><p>工具栏一般用于常用的菜单项，也可以插入其他窗口部件，一个主窗口可以拥有多个工具栏。</p><ul><li>中心部件</li></ul><p>主窗口中心区域可以放入一个窗口部件作为中心部件，是应用程序的主要功能实现区域，一个主窗口只能有一个中心部件。</p><ul><li>dock部件</li></ul><p>dock部件又称为停靠部件，或停靠窗口，可停靠在窗口部件的四周，用来设置一些部件来实现一些功能，类似一个工具箱，一个主窗口可拥有多个dock部件。</p><ul><li>状态栏</li></ul><p>状态栏用于显示程序的一些状态信息，在主窗口的最底下，一个主窗口只能拥有一个状态栏。</p><h2 id="菜单栏、工具栏、状态栏-1"><a href="#菜单栏、工具栏、状态栏-1" class="headerlink" title="菜单栏、工具栏、状态栏"></a>菜单栏、工具栏、状态栏</h2><p> <strong>代码添加示例。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//菜单</span></span><br><span class="line"> QMenu* editMenu = ui-&gt;menuBar-&gt;addMenu(<span class="string">&quot;编辑(&amp;E)&quot;</span>);</span><br><span class="line"> QAction *action_copy = editMenu-&gt;addAction(QIcon(<span class="string">&quot;test.png&quot;</span>),QString(<span class="string">&quot;复制(&amp;C)&quot;</span>));</span><br><span class="line"> action_copy-&gt;setShortcut(QKeySequence(<span class="string">&quot;Ctrl+C&quot;</span>));</span><br><span class="line"> <span class="comment">//添加到主窗口工具栏——工具栏添加动作按钮</span></span><br><span class="line"> ui-&gt;mainToolBar-&gt;addAction(action_copy);</span><br><span class="line"> <span class="comment">//动作按钮组，互斥选项，只能选择这其中的一个</span></span><br><span class="line"> QActionGroup* group = <span class="keyword">new</span> QActionGroup(<span class="keyword">this</span>);</span><br><span class="line"> QAction* action_L = group-&gt;addAction(<span class="string">&quot;左对齐(&amp;L)&quot;</span>);</span><br><span class="line"> QAction* action_R = group-&gt;addAction(<span class="string">&quot;右对齐(&amp;R)&quot;</span>);</span><br><span class="line"> QAction* action_C = group-&gt;addAction(<span class="string">&quot;居中对齐(&amp;C)&quot;</span>);</span><br><span class="line"> QAction* action_J = group-&gt;addAction(<span class="string">&quot;两端对齐(&amp;J)&quot;</span>);</span><br><span class="line"> <span class="comment">//设置可选</span></span><br><span class="line"> action_L-&gt;setCheckable(<span class="literal">true</span>);</span><br><span class="line"> action_R-&gt;setCheckable(<span class="literal">true</span>);</span><br><span class="line"> action_C-&gt;setCheckable(<span class="literal">true</span>);</span><br><span class="line"> action_J-&gt;setCheckable(<span class="literal">true</span>);</span><br><span class="line"> <span class="comment">//菜单栏中添加分隔线</span></span><br><span class="line"> editMenu-&gt;addSeparator();</span><br><span class="line"> <span class="comment">//添加到窗口菜单</span></span><br><span class="line"> editMenu-&gt;addAction(action_L);</span><br><span class="line"> editMenu-&gt;addAction(action_R);</span><br><span class="line"> editMenu-&gt;addAction(action_C);</span><br><span class="line"> editMenu-&gt;addAction(action_J);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 工具栏添加部件</span></span><br><span class="line"> QToolButton* toolBtn = <span class="keyword">new</span> QToolButton(<span class="keyword">this</span>);</span><br><span class="line"> toolBtn-&gt;setText(<span class="string">&quot;颜色&quot;</span>);</span><br><span class="line"> QMenu* colorMenu = <span class="keyword">new</span> QMenu(<span class="keyword">this</span>);</span><br><span class="line"> colorMenu-&gt;addAction(<span class="string">&quot;红色&quot;</span>);</span><br><span class="line"> colorMenu-&gt;addAction(<span class="string">&quot;绿色&quot;</span>);</span><br><span class="line"> toolBtn-&gt;setMenu(colorMenu);</span><br><span class="line"> <span class="comment">//设置模式为弹出式菜单</span></span><br><span class="line"> toolBtn-&gt;setPopupMode(QToolButton::MenuButtonPopup);</span><br><span class="line"> ui-&gt;mainToolBar-&gt;addWidget(toolBtn);</span><br><span class="line"> <span class="comment">//添加调节大小窗口</span></span><br><span class="line"> QSpinBox* spinBox = <span class="keyword">new</span> QSpinBox(<span class="keyword">this</span>);</span><br><span class="line"> ui-&gt;mainToolBar-&gt;addWidget(spinBox);</span><br><span class="line"> <span class="comment">//显示临时信息</span></span><br><span class="line"> ui-&gt;statusBar-&gt;showMessage(QString(<span class="string">&quot;欢迎......&quot;</span>),<span class="number">3000</span>);</span><br><span class="line"> <span class="comment">//添加状态栏永久显示</span></span><br><span class="line"> QLabel* tag = <span class="keyword">new</span> QLabel(<span class="string">&quot;https://doraemon-hub-art.github.io&quot;</span>);</span><br><span class="line"> ui-&gt;statusBar-&gt;addPermanentWidget(tag);</span><br></pre></td></tr></table></figure><h2 id="自定义菜单栏"><a href="#自定义菜单栏" class="headerlink" title="自定义菜单栏"></a>自定义菜单栏</h2><p>自定义菜单需要定义一个继承QWidgetAction的类， 并重写createWidget方法，在该方法中自定义部件设置。</p><p><strong>示例MyAction.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MYACTION_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYACTION_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QWidgetAction&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QLineEdit&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyAction</span> :</span> <span class="keyword">public</span> QWidgetAction</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    MyAction(QObject* parent = <span class="number">0</span>);</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function">QWidget* <span class="title">createWidget</span><span class="params">(QWidget* parent)</span></span>;</span><br><span class="line">signals:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getText</span><span class="params">(<span class="keyword">const</span> QString&amp; <span class="built_in">string</span>)</span></span>;</span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendText</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QLineEdit* lineEdit;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// MYACTION_H</span></span></span><br></pre></td></tr></table></figure><p><strong>MyAction.cpp</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;myaction.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QSplitter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line">MyAction::MyAction(QObject* parent):QWidgetAction(parent)</span><br><span class="line">&#123;</span><br><span class="line">    lineEdit = <span class="keyword">new</span> QLineEdit;</span><br><span class="line">    connect(lineEdit,&amp;QLineEdit::returnPressed,<span class="keyword">this</span>,&amp;MyAction::sendText);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QWidget *<span class="title">MyAction::createWidget</span><span class="params">(QWidget *parent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//是否继承自菜单或者工具栏</span></span><br><span class="line">    <span class="comment">//是则创建父部件的子部件并返回子部件</span></span><br><span class="line">    <span class="keyword">if</span>(parent-&gt;inherits(<span class="string">&quot;QMenu&quot;</span>)||parent-&gt;inherits(<span class="string">&quot;QToolBar&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        QSplitter * splitter = <span class="keyword">new</span> QSplitter(parent);</span><br><span class="line">        QLabel* label = <span class="keyword">new</span> QLabel(<span class="string">&quot;插入文本:&quot;</span>);</span><br><span class="line">        splitter-&gt;addWidget(label);</span><br><span class="line">        splitter-&gt;addWidget(lineEdit);</span><br><span class="line">        <span class="keyword">return</span> splitter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MyAction::sendText</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">emit <span class="title">getText</span><span class="params">(lineEdit-&gt;text())</span></span>;</span><br><span class="line">    lineEdit-&gt;clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;菜单栏、工具栏、状态栏&quot;&gt;&lt;a href=&quot;#菜单栏、工具栏、状态栏&quot; class=&quot;headerlink&quot; title=&quot;菜单栏、工具栏、状态栏&quot;&gt;&lt;/a&gt;菜单栏、工具栏、状态栏&lt;/h1&gt;&lt;p&gt;主窗口框架(QMainWindow)拥有自己的布局，包括以下组件:&lt;</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT打印调试信息</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/01/28/%E3%80%90QT%E3%80%91QT%E6%89%93%E5%8D%B0%E8%B0%83%E8%AF%95%E4%BF%A1%E6%81%AF/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/01/28/%E3%80%90QT%E3%80%91QT%E6%89%93%E5%8D%B0%E8%B0%83%E8%AF%95%E4%BF%A1%E6%81%AF/</id>
    <published>2022-01-28T10:43:07.000Z</published>
    <updated>2022-01-28T10:43:39.313Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//QDebug打印调试信息</span></span><br><span class="line">   <span class="keyword">int</span> num = <span class="number">20</span>;</span><br><span class="line">   qDebug(<span class="string">&quot;十进制%d&quot;</span>,num);</span><br><span class="line">   qDebug(<span class="string">&quot;八进制%o&quot;</span>,num);</span><br><span class="line">   qDebug(<span class="string">&quot;十六进制%x&quot;</span>,num);</span><br><span class="line">   qreal PI = <span class="number">3.14</span>;</span><br><span class="line">   qDebug(<span class="string">&quot;浮点%f&quot;</span>,PI);</span><br><span class="line">   qDebug(<span class="string">&quot;科学计数法%e&quot;</span>,PI);</span><br><span class="line">   qDebug(<span class="string">&quot;123%%&quot;</span>);<span class="comment">//123%</span></span><br><span class="line">   <span class="comment">//另一种输入方式</span></span><br><span class="line">   qDebug()&lt;&lt;PI;</span><br><span class="line">   QString str = <span class="string">&quot;Hello world&quot;</span>;</span><br><span class="line">   qDebug()&lt;&lt;str;</span><br><span class="line">   qDebug().noquote()&lt;&lt;str;<span class="comment">//不带双引号输出</span></span><br><span class="line">   qDebug()&lt;&lt;<span class="string">&quot;hello&quot;</span>&lt;&lt;<span class="string">&quot;world&quot;</span>;<span class="comment">//默认输入，这两个单词中间会有空格</span></span><br><span class="line">   qDebug().nospace()&lt;&lt;<span class="string">&quot;hello&quot;</span>&lt;&lt;<span class="string">&quot;world&quot;</span>;<span class="comment">//去掉空格</span></span><br><span class="line">   <span class="comment">//控制台程序会输入到黑窗口</span></span><br><span class="line">   <span class="comment">//桌面应用程序会输出到-应用程序输出</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QT文件处理</title>
    <link href="http://blog.zhaoyuxuan.xyz/2022/01/24/%E3%80%90QT%E3%80%91QT%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/"/>
    <id>http://blog.zhaoyuxuan.xyz/2022/01/24/%E3%80%90QT%E3%80%91QT%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</id>
    <published>2022-01-24T15:28:30.000Z</published>
    <updated>2022-01-24T15:29:28.874Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件处理"><a href="#文件处理" class="headerlink" title="文件处理"></a>文件处理</h1><p>QFile类用于文件操作，它提供了读写文件的接口，可以读写文件、二进制文件和Qt资源文件。</p><p>处理文本文件和二进制文件，可以使用QTextStream类和QDataStream类。处理临时文件可以使用QTemporaryFile,获取信息可以使用QFileInfo,处理目录可以使用QDir,监视文件和目录变化可以使用QFileSystemWatcher。</p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202201242329099.png" alt="image-20220124203618757"></p><p><strong>QFile类示例</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QCoreApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QCoreApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//文件读取</span></span><br><span class="line">   <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;hello.txt&quot;</span>)</span></span>;</span><br><span class="line">   <span class="keyword">if</span>(file.open(QIODevice::ReadOnly))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">char</span> buffer[<span class="number">100</span>];</span><br><span class="line">       qint32 n = file.readLine(buffer,<span class="keyword">sizeof</span>(buffer));</span><br><span class="line">       <span class="keyword">if</span>(n != <span class="number">-1</span>)</span><br><span class="line">       &#123;</span><br><span class="line">            qDebug()&lt;&lt;n&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;buffer;</span><br><span class="line">            file.close();<span class="comment">//关闭文件</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">        qDebug()&lt;&lt;file.errorString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//文件写入</span></span><br><span class="line">   QFile dataFile;</span><br><span class="line">   <span class="keyword">double</span> dPI = <span class="number">3.1415926</span>;</span><br><span class="line">   <span class="keyword">int</span> age =<span class="number">19</span>;</span><br><span class="line">   dataFile.setFileName(<span class="string">&quot;data.txt&quot;</span>);</span><br><span class="line">   <span class="keyword">if</span>(dataFile.open(QFile::WriteOnly | QFile::Truncate))</span><br><span class="line">   &#123;</span><br><span class="line">        <span class="function">QTextStream <span class="title">out</span><span class="params">(&amp;dataFile)</span></span>;</span><br><span class="line">        <span class="comment">//设置精度</span></span><br><span class="line">        out.setRealNumberPrecision(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//设置字段宽度</span></span><br><span class="line">        out.setFieldWidth(<span class="number">20</span>);</span><br><span class="line">         <span class="comment">//设置对齐方式</span></span><br><span class="line">         out.setFieldAlignment(QTextStream::AlignCenter);</span><br><span class="line">        out&lt;&lt;QString(<span class="string">&quot;PI:&quot;</span>)&lt;&lt;dPI;</span><br><span class="line">        <span class="comment">//将整数以二进制方式写入</span></span><br><span class="line">        out&lt;&lt;bin&lt;&lt;age;</span><br><span class="line">        <span class="comment">//十六进制写入，并显示进制前缀</span></span><br><span class="line">        out&lt;&lt;hex&lt;&lt;showbase&lt;&lt;age;</span><br><span class="line">        <span class="comment">//科学计数法</span></span><br><span class="line">        out&lt;&lt;scientific&lt;&lt;dPI;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <strong>操作二进制文件</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QCoreApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QDate&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QDataStream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//往文件中写入数据</span></span><br><span class="line">    <span class="function">QCoreApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"></span><br><span class="line">     <span class="function">QFile  <span class="title">binFile</span><span class="params">(<span class="string">&quot;info.bat&quot;</span>)</span></span>;</span><br><span class="line">     <span class="keyword">if</span>(binFile.open(QIODevice::WriteOnly | QIODevice::Truncate))</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="function">QDataStream <span class="title">out</span><span class="params">(&amp;binFile)</span></span>;</span><br><span class="line">         out&lt;&lt;QString(<span class="string">&quot;半生瓜のblog&quot;</span>)&lt;&lt;QDate::fromString(<span class="string">&quot;2022-01-24&quot;</span>,<span class="string">&quot;yyyy-MM-dd&quot;</span>)&lt;&lt;(qint32)<span class="number">19</span>;</span><br><span class="line">          binFile.close();</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">         qDebug()&lt;&lt;binFile.errorString();</span><br><span class="line">     &#125;</span><br><span class="line">     binFile.setFileName(<span class="string">&quot;info.bat&quot;</span>);<span class="comment">//指明要操作的文件</span></span><br><span class="line">     <span class="keyword">if</span>(binFile.open(QIODevice::ReadOnly))</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="function">QDataStream <span class="title">in</span><span class="params">(&amp;binFile)</span></span>;</span><br><span class="line">        <span class="comment">//怎么写怎么读</span></span><br><span class="line">         QString Name;</span><br><span class="line">         QDate NowTime;</span><br><span class="line">         qint32 Age;</span><br><span class="line">         in&gt;&gt;Name&gt;&gt;NowTime&gt;&gt;Age;</span><br><span class="line">         qDebug()&lt;&lt;Name&lt;&lt;NowTime&lt;&lt;Age;</span><br><span class="line">         binFile.close();</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">          qDebug()&lt;&lt;binFile.errorString();</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例:获取文件信息</strong></p><p><img src="https://gitee.com/Do2eM0N/blogimg/raw/master/202201242329924.png" alt="image-20220124232543877"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FileInfo::getFileInfo</span><span class="params">(QString &amp;fileName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//通过这个类来获取文件的信息</span></span><br><span class="line">    <span class="function">QFileInfo <span class="title">info</span><span class="params">(fileName)</span></span>;</span><br><span class="line">    qint64 size = info.size();<span class="comment">//获取文件大小</span></span><br><span class="line">    QDateTime createTime = info.created();<span class="comment">//获取文件创建时间</span></span><br><span class="line">    QDateTime lastModTime = info.lastModified();<span class="comment">//获取文件最后一次被的修改的时间</span></span><br><span class="line">    QDateTime lasReadTime = info.lastRead();<span class="comment">//获取文件最后一次被读取的时间</span></span><br><span class="line">    <span class="comment">//文件的属性信息</span></span><br><span class="line">    <span class="keyword">bool</span> isDir = info.isDir();<span class="comment">//是不是目录</span></span><br><span class="line">    <span class="keyword">bool</span> isFile = info.isFile();<span class="comment">//是不是文件</span></span><br><span class="line">    <span class="keyword">bool</span> isSymLink = info.isSymLink();<span class="comment">//是不是链接</span></span><br><span class="line">    <span class="keyword">bool</span> isHid = info.isHidden();<span class="comment">//是否隐藏</span></span><br><span class="line">    <span class="keyword">bool</span> isReadable = info.isReadable();<span class="comment">//是否可读</span></span><br><span class="line">    <span class="keyword">bool</span> isWritable = info.isWritable();<span class="comment">//是否可写</span></span><br><span class="line">    <span class="keyword">bool</span> isExcutable = info.isExecutable();<span class="comment">//是否可执行</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据读取信息设置控件信息</span></span><br><span class="line">    ui-&gt;FileSizeLineEdit-&gt;setText(QString::number(size));<span class="comment">//整型转字符串</span></span><br><span class="line">    ui-&gt;CreateTimeLineEdit-&gt;setText(createTime.toString());<span class="comment">//QDate转字符串</span></span><br><span class="line">    ui-&gt;LastModTimeLineEdit-&gt;setText(lastModTime.toString());</span><br><span class="line">    ui-&gt;LastCheckTimeLineEdit-&gt;setText(lasReadTime.toString());</span><br><span class="line">    ui-&gt;isDirCheckBox-&gt;setChecked(isDir);</span><br><span class="line">    ui-&gt;isFileCheckBox-&gt;setChecked(isFile);</span><br><span class="line">    ui-&gt;isExecutableCheckBox-&gt;setChecked(isExcutable);</span><br><span class="line">    ui-&gt;isSymLinkCheckBox-&gt;setChecked(isSymLink);</span><br><span class="line">    ui-&gt;isHiddenCheckBox-&gt;setChecked(isHid);</span><br><span class="line">    ui-&gt;isWritableCheckBox-&gt;setChecked(isWritable);</span><br><span class="line">    ui-&gt;isReadableCheckBox-&gt;setChecked(isReadable);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FileInfo::on_browerFileBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//选择文件</span></span><br><span class="line">    QString fileName = QFileDialog::getOpenFileName(<span class="keyword">this</span>,<span class="string">&quot;打开文件&quot;</span>,<span class="string">&quot;.&quot;</span>,<span class="string">&quot;files(*)&quot;</span>);</span><br><span class="line">     <span class="comment">//选择目录QString path = QFileDialog::getExistingDirectory(this,&quot;选择目录&quot;,&quot;.&quot;);</span></span><br><span class="line">    ui-&gt;FileNameLineEdit-&gt;setText(fileName);<span class="comment">//文件名(带路径的)</span></span><br><span class="line">    getFileInfo(fileName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文件处理&quot;&gt;&lt;a href=&quot;#文件处理&quot; class=&quot;headerlink&quot; title=&quot;文件处理&quot;&gt;&lt;/a&gt;文件处理&lt;/h1&gt;&lt;p&gt;QFile类用于文件操作，它提供了读写文件的接口，可以读写文件、二进制文件和Qt资源文件。&lt;/p&gt;
&lt;p&gt;处理文本文件和二进</summary>
      
    
    
    
    <category term="QT" scheme="http://blog.zhaoyuxuan.xyz/categories/QT/"/>
    
    
    <category term="-QT" scheme="http://blog.zhaoyuxuan.xyz/tags/QT/"/>
    
  </entry>
  
</feed>
